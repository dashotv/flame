// Code generated by github.com/dashotv/golem. DO NOT EDIT.
package client

import (
	"github.com/go-resty/resty/v2"
)

// Client is used to access Pace services.
type Client struct {
	// RemoteHost is the URL of the remote server that this Client should
	// access.
	RemoteHost string
	// Debug enables debug on Resty client
	Debug bool
	// Resty
	Resty *resty.Client

	// Services corresponding to the different endpoints (groups/routes)
	Metube       *MetubeService
	Nzbs         *NzbsService
	Qbittorrents *QbittorrentsService
}

// Set the debug flag
func (c *Client) SetDebug(debug bool) {
	c.Debug = debug
	c.Resty.SetDebug(debug)
}

// New makes a new Client.
func New(remoteHost string) *Client {
	c := &Client{
		RemoteHost: remoteHost,
		Resty:      resty.New().SetBaseURL(remoteHost),
	}
	c.Metube = NewMetubeService(c)
	c.Nzbs = NewNzbsService(c)
	c.Qbittorrents = NewQbittorrentsService(c)

	return c
}

type Response struct {
	Error   bool   `json:"error"`
	Message string `json:"message"`
}

type Setting struct {
	Name  string `json:"name"`
	Value bool   `json:"value"`
}

type SettingsBatch struct {
	IDs   []string `json:"ids"`
	Name  string   `json:"name"`
	Value bool     `json:"value"`
}
