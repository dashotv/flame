openapi: 3.0.3
info:
  description: |
    - All API methods are under `/api/v2/APIName/methodName`, where `APIName` is a certain subgroup of API methods whose functionality is related.
    - Either `GET` or `POST` can be used as the request type for all API methods.
    - All API methods require [authentication](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#authentication) (except the `/api/v2/auth/login` method itself, obviously).
  license:
    name: GNU GPLv2
    url: https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html
  termsOfService: https://github.com/qbittorrent/qBittorrent/blob/master/COPYING
  title: qBittorrent WebUI API
  version: 2.8.3
externalDocs:
  description: qBittorrent WebUI API documentation
  url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)
servers:
- description: qBittorrent Web UI API
  url: http://localhost:8080/api/v2
tags:
- description: |
    All Authentication API methods are under "auth", e.g.: `/api/v2/auth/methodName`.

    qBittorrent uses cookie-based authentication.
  externalDocs:
    description: qBittorrent WebUI API documentation
    url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#authentication
  name: auth
- description: "All Application API methods are under \"app\", e.g.: `/api/v2/app/methodName`."
  externalDocs:
    description: qBittorrent WebUI API documentation
    url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#application
  name: app
- description: "All Log API methods are under \"log\", e.g.: `/api/v2/log/methodName.`"
  externalDocs:
    description: qBittorrent WebUI API documentation
    url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#log
  name: log
- description: "Sync API implements requests for obtaining changes since the last\
    \ request. All Sync API methods are under \"sync\", e.g.: `/api/v2/sync/methodName.`"
  externalDocs:
    description: qBittorrent WebUI API documentation
    url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#sync
  name: sync
- description: "All Transfer info API methods are under \"transfer\", e.g.: `/api/v2/transfer/methodName.`"
  externalDocs:
    description: qBittorrent WebUI API documentation
    url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#transfer-info
  name: transfer
- description: "All Torrent management API methods are under \"torrents\", e.g.: `/api/v2/torrents/methodName.`"
  externalDocs:
    description: qBittorrent WebUI API documentation
    url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#torrent-management
  name: torrents
- description: "All RSS API methods are under \"rss\", e.g.: `/api/v2/rss/methodName.`"
  externalDocs:
    description: qBittorrent WebUI API documentation
    url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#rss-experimental
  name: rss
- description: "All Search API methods are under \"search\", e.g.: `/api/v2/search/methodName.`"
  externalDocs:
    description: qBittorrent WebUI API documentation
    url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#search
  name: search
paths:
  /auth/login:
    post:
      description: |
        Upon success, the response will contain a cookie with your SID. You must supply the cookie whenever you want to perform an operation that requires authentication.
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#login
      operationId: authLoginPost
      parameters:
      - in: header
        name: Referer
        schema:
          type: string
      - in: header
        name: Origin
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/authLoginPost_request'
        description: |
          Example showing how to login and execute a command that requires authentication using `curl`:

          ```
          $ curl -i --header 'Referer: http://localhost:8080' --data 'username=admin&password=adminadmin' http://localhost:8080/api/v2/auth/login
          HTTP/1.1 200 OK
          Content-Encoding:
          Content-Length: 3
          Content-Type: text/plain; charset=UTF-8
          Set-Cookie: SID=hBc7TxF76ERhvIw0jQQ4LZ7Z1jQUV0tQ; path=/
          $ curl http://localhost:8080/api/v2/torrents/info --cookie "SID=hBc7TxF76ERhvIw0jQQ4LZ7Z1jQUV0tQ"
          ```

          Note: Set `Referer` or `Origin` header to the exact same domain and port as used in the HTTP query `Host` header.
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: All other scenarios
          headers:
            Set-Cookie:
              schema:
                example: SID=hBc7TxF76ERhvIw0jQQ4LZ7Z1jQUV0tQ
                type: string
        "403":
          description: User's IP is banned for too many failed login attempts
      summary: Login
      tags:
      - auth
  /auth/logout:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#logout
      operationId: authLogoutPost
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Logout
      tags:
      - auth
  /app/version:
    get:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-application-version
      operationId: appVersionGet
      responses:
        "200":
          content:
            text/plain:
              schema:
                description: "The response is a string with the application version,\
                  \ e.g. `v4.1.3`"
                example: v4.1.3
                type: string
          description: All scenarios
      security:
      - sid: []
      summary: Get application version
      tags:
      - app
  /app/webapiVersion:
    get:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-api-version
      operationId: appWebapiVersionGet
      responses:
        "200":
          content:
            text/plain:
              schema:
                description: "The response is a string with the WebAPI version, e.g.\
                  \ `2.0`"
                example: "2.0"
                type: string
          description: All scenarios
      security:
      - sid: []
      summary: Get API version
      tags:
      - app
  /app/buildInfo:
    get:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-build-info
      operationId: appBuildInfoGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildInfo'
          description: All scenarios- see JSON below
      security:
      - sid: []
      summary: Get build info
      tags:
      - app
  /app/shutdown:
    get:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#shutdown-application
      operationId: appShutdownGet
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Shutdown application
      tags:
      - app
  /app/preferences:
    get:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-application-preferences
      operationId: appPreferencesGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
          description: All scenarios- see JSON below
      security:
      - sid: []
      summary: Get application preferences
      tags:
      - app
  /app/setPreferences:
    post:
      description: |
        Notes:
        1. There is no need to pass all possible preferences' `token:value` pairs if you only want to change one option
        2. Paths in `scan_dirs` must exist, otherwise this option will have no effect
        3. String values must be quoted; integer and boolean values must never be quoted

        For a list of possible preference options see [Get application preferences](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-application-preferences)
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-application-preferences
      operationId: appSetPreferencesPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              json:
                contentType: application/json
            example:
              json: "{\"save_path\":\"C:/Users/Dayman/Downloads\",\"queueing_enabled\"\
                :false,\"scan_dirs\":{\"C:/Games\": 0,\"D:/Downloads\": 1}}"
            schema:
              $ref: '#/components/schemas/appSetPreferencesPost_request'
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Set application preferences
      tags:
      - app
  /app/defaultSavePath:
    get:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-default-save-path
      operationId: appDefaultSavePathGet
      responses:
        "200":
          content:
            text/plain:
              schema:
                description: "The response is a string with the default save path,\
                  \ e.g. `C:/Users/Dayman/Downloads`."
                example: C:/Users/Dayman/Downloads
                type: string
          description: All scenarios
      security:
      - sid: []
      summary: Get default save path
      tags:
      - app
  /log/main:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-log
      operationId: logMainPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            example: /api/v2/log/main?normal=true&info=true&warning=true&critical=true&last_known_id=-1
            schema:
              $ref: '#/components/schemas/logMainPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              example: |
                [
                  {
                    "id":0,
                    "message":"qBittorrent v3.4.0 started",
                    "timestamp":1507969127860,
                    "type":1
                  },
                  {
                    "id":1,
                    "message":"qBittorrent is trying to listen on any interface port: 19036",
                    "timestamp":1507969127869,
                    "type":2
                  },
                  {
                    "id":2,
                    "message":"Peer ID: -qB3400-",
                    "timestamp":1507969127870,
                    "type":1
                  },
                  {
                    "id":3,
                    "message":"HTTP User-Agent is 'qBittorrent/3.4.0'",
                    "timestamp":1507969127870,
                    "type":1
                  },
                  {
                    "id":4,
                    "message":"DHT support [ON]",
                    "timestamp":1507969127871,
                    "type":2
                  },
                  {
                    "id":5,
                    "message":"Local Peer Discovery support [ON]",
                    "timestamp":1507969127871,
                    "type":2
                  },
                  {
                    "id":6,
                    "message":"PeX support [ON]",
                    "timestamp":1507969127871,
                    "type":2
                  },
                  {
                    "id":7,
                    "message":"Anonymous mode [OFF]",
                    "timestamp":1507969127871,
                    "type":2
                  },
                  {
                    "id":8,
                    "message":"Encryption support [ON]",
                    "timestamp":1507969127871,
                    "type":2
                  },
                  {
                    "id":9,
                    "message":"Embedded Tracker [OFF]",
                    "timestamp":1507969127871,
                    "type":2
                  },
                  {
                    "id":10,
                    "message":"UPnP / NAT-PMP support [ON]",
                    "timestamp":1507969127873,
                    "type":2
                  },
                  {
                    "id":11,
                    "message":"Web UI: Now listening on port 8080",
                    "timestamp":1507969127883,
                    "type":1
                  },
                  {
                    "id":12,
                    "message":"Options were saved successfully.",
                    "timestamp":1507969128055,
                    "type":1
                  },
                  {
                    "id":13,
                    "message":"qBittorrent is successfully listening on interface :: port: TCP/19036",
                    "timestamp":1507969128270,
                    "type":2
                  },
                  {
                    "id":14,
                    "message":"qBittorrent is successfully listening on interface 0.0.0.0 port: TCP/19036",
                    "timestamp":1507969128271,
                    "type":2
                  },
                  {
                    "id":15,
                    "message":"qBittorrent is successfully listening on interface 0.0.0.0 port: UDP/19036",
                    "timestamp":1507969128272,
                    "type":2
                  }
                ]
              schema:
                description: |
                  The response is a JSON array in which each element is an entry of the log.

                  Each element of the array has the following properties:
                items:
                  $ref: '#/components/schemas/MainLog'
                type: array
          description: All scenarios- see JSON below
      security:
      - sid: []
      summary: Get log
      tags:
      - log
  /log/peers:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-peer-log
      operationId: logPeersPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/logPeersPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: The response a JSON array. Each element of the array
                  of objects (each object is the information relative to a peer) containing
                  the following fields
                items:
                  $ref: '#/components/schemas/PeersLog'
                type: array
          description: All scenarios- see JSON below
      security:
      - sid: []
      summary: Get peer log
      tags:
      - log
  /sync/maindata:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-main-data
      operationId: syncMaindataPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            example: /api/v2/sync/maindata?rid=14
            schema:
              $ref: '#/components/schemas/syncMaindataPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              example: |
                {
                  "rid":15,
                  "torrents":
                  {
                    "8c212779b4abde7c6bc608063a0d008b7e40ce32":
                    {
                        "state":"pausedUP"
                    }
                  }
                }
              schema:
                $ref: '#/components/schemas/MainData'
          description: All scenarios- see JSON below
      security:
      - sid: []
      summary: Get main data
      tags:
      - sync
  /sync/torrentPeers:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-peers-data
      operationId: syncTorrentPeersPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            example: /api/v2/sync/torrentPeers?hash=8c212779b4abde7c6bc608063a0d008b7e40ce32?rid=14
            schema:
              $ref: '#/components/schemas/syncTorrentPeersPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TorrentPeers'
          description: All other scenarios- see JSON below
        "404":
          description: Torrent hash was not found
      security:
      - sid: []
      summary: Get torrent peers data
      tags:
      - sync
  /transfer/info:
    get:
      description: This method returns info you usually see in qBt status bar.
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-global-transfer-info
      operationId: transferInfoGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferInfo'
          description: All scenarios- see JSON below
      security:
      - sid: []
      summary: Get global transfer info
      tags:
      - transfer
  /transfer/speedLimitsMode:
    get:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-alternative-speed-limits-state
      operationId: transferSpeedLimitsModeGet
      responses:
        "200":
          content:
            text/plain:
              schema:
                description: "The response is `1` if alternative speed limits are\
                  \ enabled, `0` otherwise."
                enum:
                - 0
                - 1
                format: int32
                type: integer
          description: All scenarios
      security:
      - sid: []
      summary: Get alternative speed limits state
      tags:
      - transfer
  /transfer/toggleSpeedLimitsMode:
    get:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#toggle-alternative-speed-limits
      operationId: transferToggleSpeedLimitsModeGet
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Toggle alternative speed limits
      tags:
      - transfer
  /transfer/downloadLimit:
    get:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-global-download-limit
      operationId: transferDownloadLimitGet
      responses:
        "200":
          content:
            text/plain:
              schema:
                description: The response is the value of current global download
                  speed limit in bytes/second; this value will be zero if no limit
                  is applied.
                format: int64
                type: integer
          description: All scenarios
      security:
      - sid: []
      summary: Get global download limit
      tags:
      - transfer
  /transfer/setDownloadLimit:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-global-download-limit
      operationId: transferSetDownloadLimitPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/transferSetDownloadLimitPost_request'
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Set global download limit
      tags:
      - transfer
  /transfer/uploadLimit:
    get:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-global-upload-limit
      operationId: transferUploadLimitGet
      responses:
        "200":
          content:
            text/plain:
              schema:
                description: The response is the value of current global upload speed
                  limit in bytes/second; this value will be zero if no limit is applied.
                format: int64
                type: integer
          description: All scenarios
      security:
      - sid: []
      summary: Get global upload limit
      tags:
      - transfer
  /transfer/setUploadLimit:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-global-upload-limit
      operationId: transferSetUploadLimitPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/transferSetUploadLimitPost_request'
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Set global upload limit
      tags:
      - transfer
  /transfer/banPeers:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#ban-peers
      operationId: transferBanPeersPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              peers:
                explode: false
                style: pipeDelimited
            schema:
              $ref: '#/components/schemas/transferBanPeersPost_request'
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Ban peers
      tags:
      - transfer
  /torrents/info:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list
      operationId: torrentsInfoPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example: /api/v2/torrents/info?filter=downloading&category=sample%20category&sort=ratio
            schema:
              $ref: '#/components/schemas/torrentsInfoPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: The response is a JSON array with the following fields
                example: |
                  [
                    {
                      "dlspeed":9681262,
                      "eta":87,
                      "f_l_piece_prio":false,
                      "force_start":false,
                      "hash":"8c212779b4abde7c6bc608063a0d008b7e40ce32",
                      "category":"",
                      "tags": "",
                      "name":"debian-8.1.0-amd64-CD-1.iso",
                      "num_complete":-1,
                      "num_incomplete":-1,
                      "num_leechs":2,
                      "num_seeds":54,
                      "priority":1,
                      "progress":0.16108787059783936,
                      "ratio":0,
                      "seq_dl":false,
                      "size":657457152,
                      "state":"downloading",
                      "super_seeding":false,
                      "upspeed":0
                    }
                  ]
                items:
                  $ref: '#/components/schemas/TorrentInfo'
                type: array
          description: All scenarios- see JSON below
      security:
      - sid: []
      summary: Get torrent list
      tags:
      - torrents
  /torrents/properties:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-generic-properties
      operationId: torrentsPropertiesPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/torrentsPropertiesPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              example: |
                {
                  "addition_date":1438429165,
                  "comment":"\"Debian CD from cdimage.debian.org\"",
                  "completion_date":1438429234,
                  "created_by":"",
                  "creation_date":1433605214,
                  "dl_limit":-1,
                  "dl_speed":0,
                  "dl_speed_avg":9736015,
                  "eta":8640000,
                  "last_seen":1438430354,
                  "nb_connections":3,
                  "nb_connections_limit":250,
                  "peers":1,
                  "peers_total":89,
                  "piece_size":524288,
                  "pieces_have":1254,
                  "pieces_num":1254,
                  "reannounce":672,
                  "save_path":"/Downloads/debian-8.1.0-amd64-CD-1.iso",
                  "seeding_time":1128,
                  "seeds":1,
                  "seeds_total":254,
                  "share_ratio":0.00072121022562178299,
                  "time_elapsed":1197,
                  "total_downloaded":681521119,
                  "total_downloaded_session":681521119,
                  "total_size":657457152,
                  "total_uploaded":491520,
                  "total_uploaded_session":491520,
                  "total_wasted":23481724,
                  "up_limit":-1,
                  "up_speed":0,
                  "up_speed_avg":410
                }
              schema:
                $ref: '#/components/schemas/TorrentsProperties'
          description: All other scenarios- see JSON below
        "404":
          description: Torrent hash was not found
      security:
      - sid: []
      summary: Get torrent generic properties
      tags:
      - torrents
  /torrents/trackers:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-trackers
      operationId: torrentsTrackersPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/torrentsTrackersPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              example: |
                [
                  {
                  "msg":"",
                  "num_peers":100,
                  "status":2,
                  "url":"http://bttracker.debian.org:6969/announce"
                  }
                ]
              schema:
                description: "The response is a JSON array, where each element contains\
                  \ info about one tracker, with the following fields"
                items:
                  $ref: '#/components/schemas/TorrentsTrackers'
                type: array
          description: All other scenarios- see JSON below
        "404":
          description: Torrent hash was not found
      security:
      - sid: []
      summary: Get torrent trackers
      tags:
      - torrents
  /torrents/webseeds:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-web-seeds
      operationId: torrentWebseedsPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/torrentWebseedsPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: "The response is a JSON array, where each element is\
                  \ information about one webseed, with the following fields"
                example: |
                  [
                    {
                      "url":"http://some_url/"
                    },
                    {
                      "url":"http://some_other_url/"
                    }
                  ]
                items:
                  $ref: '#/components/schemas/TorrentsWebseeds'
                type: array
          description: All other scenarios- see JSON below
        "404":
          description: Torrent hash was not found
      security:
      - sid: []
      summary: Get torrent web seeds
      tags:
      - torrents
  /torrents/files:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-contents
      operationId: torrentsFilesPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              indexes:
                explode: false
                style: pipeDelimited
            schema:
              $ref: '#/components/schemas/torrentsFilesPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: |
                  The response is:
                    - empty, if the torrent hash is invalid
                    - otherwise, a JSON array, where each element contains info about one file, with the following fields
                example: |
                  [
                      {
                        "index":0,
                        "is_seed":false,
                        "name":"debian-8.1.0-amd64-CD-1.iso",
                        "piece_range":[0,1253],
                        "priority":1,
                        "progress":0,
                        "size":657457152
                      }
                  ]
                items:
                  $ref: '#/components/schemas/TorrentsFiles'
                type: array
          description: All other scenarios- see JSON below
        "404":
          description: Torrent hash was not found
      security:
      - sid: []
      summary: Get torrent contents
      tags:
      - torrents
  /torrents/pieceStates:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-pieces-states
      operationId: torrentsPieceStatesPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/torrentsPieceStatesPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: |
                  The response is:
                  - empty, if the torrent hash is invalid
                  - otherwise, an array of states (integers) of all pieces (in order) of a specific torrent.

                  Value meanings are defined as below:
                  | Value | Description        |
                  | ----- | ------------------ |
                  | 0     | Not downloaded yet |
                  | 1     | Now downloading    |
                  | 2     | Already downloaded |
                example:
                - 0
                - 0
                - 2
                - 1
                - 0
                - 0
                - 2
                - 1
                items:
                  enum:
                  - 0
                  - 1
                  - 2
                  format: int32
                  type: integer
                type: array
          description: All other scenarios- see JSON below
        "404":
          description: Torrent hash was not found
      security:
      - sid: []
      summary: Get torrent pieces' states
      tags:
      - torrents
  /torrents/pieceHashes:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-pieces-hashes
      operationId: torrentsPieceHashesPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/torrentsPieceHashesPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: |
                  The response is:
                  - empty, if the torrent hash is invalid
                  - otherwise, an array of hashes (strings) of all pieces (in order) of a specific torrent.
                example:
                - 54eddd830a5b58480a6143d616a97e3a6c23c439
                - f8a99d225aa4241db100f88407fc3bdaead583ab
                - 928fb615b9bd4dd8f9e9022552c8f8f37ef76f58
                items:
                  type: string
                type: array
          description: All other scenarios- see JSON below
        "404":
          description: Torrent hash was not found
      security:
      - sid: []
      summary: Get torrent pieces' hashes
      tags:
      - torrents
  /torrents/pause:
    post:
      description: "Requires knowing the torrent hashes. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#pause-torrents
      operationId: torrentsPausePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 54eddd830a5b58480a6143d616a97e3a6c23c439
            schema:
              $ref: '#/components/schemas/Hashes'
        description: "The hashes of the torrents you want to pause. `hashes` can contain\
          \ multiple hashes separated by `|`, to pause multiple torrents, or set to\
          \ `all`, to pause all torrents."
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Pause torrents
      tags:
      - torrents
  /torrents/resume:
    post:
      description: "Requires knowing the torrent hashes. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#resume-torrents
      operationId: torrentsResumePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 54eddd830a5b58480a6143d616a97e3a6c23c439
            schema:
              $ref: '#/components/schemas/Hashes'
        description: "The hashes of the torrents you want to resume. `hashes` can\
          \ contain multiple hashes separated by `|`, to resume multiple torrents,\
          \ or set to `all`, to resume all torrents."
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Resume torrents
      tags:
      - torrents
  /torrents/delete:
    post:
      description: "Requires knowing the torrent hashes. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#delete-torrents
      operationId: torrentsDeletePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              deleteFiles: false
            schema:
              $ref: '#/components/schemas/torrentsDeletePost_request'
        description: "The hashes of the torrents you want to delete. `hashes` can\
          \ contain multiple hashes separated by `|`, to delete multiple torrents,\
          \ or set to `all`, to delete all torrents."
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Delete torrents
      tags:
      - torrents
  /torrents/recheck:
    post:
      description: "Requires knowing the torrent hashes. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#recheck-torrents
      operationId: torrentsRecheckPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 54eddd830a5b58480a6143d616a97e3a6c23c439
            schema:
              $ref: '#/components/schemas/Hashes'
        description: "The hashes of the torrents you want to recheck. `hashes` can\
          \ contain multiple hashes separated by `|`, to recheck multiple torrents,\
          \ or set to `all`, to recheck all torrents."
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Recheck torrents
      tags:
      - torrents
  /torrents/reannounce:
    post:
      description: "Requires knowing the torrent hashes. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#reannounce-torrents
      operationId: torrentsReannouncePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 54eddd830a5b58480a6143d616a97e3a6c23c439
            schema:
              $ref: '#/components/schemas/Hashes'
        description: "The hashes of the torrents you want to reannounce. `hashes`\
          \ can contain multiple hashes separated by `|`, to reannounce multiple torrents,\
          \ or set to `all`, to reannounce all torrents."
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Reannounce torrents
      tags:
      - torrents
  /torrents/add:
    post:
      description: "This method can add torrents from server local file or from URLs.\
        \ `http://`, `https://`, `magnet:` and `bc://bt/` links are supported."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#add-new-torrent
      operationId: torrentsAddPost
      requestBody:
        content:
          multipart/form-data:
            encoding:
              torrents:
                contentType: application/x-bittorrent
              tags:
                explode: false
                style: form
            schema:
              $ref: '#/components/schemas/torrentsAddPost_request'
        description: |
          Add torrent from URLs example:
          ```
          POST /api/v2/torrents/add HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: multipart/form-data; boundary=---------------------------6688794727912
          Content-Length: length

          -----------------------------6688794727912
          Content-Disposition: form-data; name="urls"

          https://torcache.net/torrent/3B1A1469C180F447B77021074DBBCCAEF62611E7.torrent
          https://torcache.net/torrent/3B1A1469C180F447B77021074DBBCCAEF62611E8.torrent
          -----------------------------6688794727912
          Content-Disposition: form-data; name="savepath"

          C:/Users/qBit/Downloads
          -----------------------------6688794727912
          Content-Disposition: form-data; name="cookie"

          ui=28979218048197
          -----------------------------6688794727912
          Content-Disposition: form-data; name="category"

          movies
          -----------------------------6688794727912
          Content-Disposition: form-data; name="skip_checking"

          true
          -----------------------------6688794727912
          Content-Disposition: form-data; name="paused"

          true
          -----------------------------6688794727912
          Content-Disposition: form-data; name="root_folder"

          true
          -----------------------------6688794727912--
          ```

          Add torrents from files example:
          ```
          POST /api/v2/torrents/add HTTP/1.1
          Content-Type: multipart/form-data; boundary=-------------------------acebdf13572468
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Length: length

          ---------------------------acebdf13572468
          Content-Disposition: form-data; name="torrents"; filename="8f18036b7a205c9347cb84a253975e12f7adddf2.torrent"
          Content-Type: application/x-bittorrent

          file_binary_data_goes_here
          ---------------------------acebdf13572468
          Content-Disposition: form-data; name="torrents"; filename="UFS.torrent"
          Content-Type: application/x-bittorrent

          file_binary_data_goes_here
          ---------------------------acebdf13572468--
          ```
          The above example will add two torrent files. `file_binary_data_goes_here` represents raw data of torrent file (basically a byte array).
        required: true
      responses:
        "200":
          description: All other scenarios
        "415":
          description: Torrent file is not valid
      security:
      - sid: []
      summary: Add new torrent
      tags:
      - torrents
  /torrents/addTrackers:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#add-trackers-to-torrent
      operationId: torrentsAddTrackersPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/torrentsAddTrackersPost_request'
        description: |
          ```
          POST /api/v2/torrents/addTrackers HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hash=8c212779b4abde7c6bc608063a0d008b7e40ce32&urls=http://192.168.0.1/announce%0Audp://192.168.0.1:3333/dummyAnnounce
          ```
          This adds two trackers to torrent with hash `8c212779b4abde7c6bc608063a0d008b7e40ce32`. Note `%0A` (aka LF newline) between trackers. Ampersand in tracker urls MUST be escaped.
        required: true
      responses:
        "200":
          description: All other scenarios- see JSON below
        "404":
          description: Torrent hash was not found
      security:
      - sid: []
      summary: Add trackers to torrent
      tags:
      - torrents
  /torrents/editTracker:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#edit-trackers
      operationId: torrentsEditTrackerPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/torrentsEditTrackerPost_request'
        required: true
      responses:
        "200":
          description: All other scenarios
        "400":
          description: '`newUrl` is not a valid URL'
        "404":
          description: Torrent hash was not found
        "409":
          description: '`newUrl` already exists for the torrent or `origUrl` was not
            found'
      security:
      - sid: []
      summary: Edit trackers
      tags:
      - torrents
  /torrents/removeTrackers:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#remove-trackers
      operationId: torrentsRemoveTrackersPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              urls:
                explode: false
                style: pipeDelimited
            schema:
              $ref: '#/components/schemas/torrentsRemoveTrackersPost_request'
        required: true
      responses:
        "200":
          description: All other scenarios
        "404":
          description: Torrent hash was not found
        "409":
          description: All `urls` were not found
      security:
      - sid: []
      summary: Remove trackers
      tags:
      - torrents
  /torrents/addPeers:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#add-peers
      operationId: torrentsAddPeersPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
              peers:
                explode: false
                style: pipeDelimited
            schema:
              $ref: '#/components/schemas/torrentsAddPeersPost_request'
        required: true
      responses:
        "200":
          description: All other scenarios
        "400":
          description: None of the supplied peers are valid
      security:
      - sid: []
      summary: Add peers
      tags:
      - torrents
  /torrents/increasePrio:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#increase-torrent-priority
      operationId: torrentsIncreasePrioPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 54eddd830a5b58480a6143d616a97e3a6c23c439
            schema:
              $ref: '#/components/schemas/Hashes'
        description: "The hashes of the torrents you want to increase the priority\
          \ of. `hashes` can contain multiple hashes separated by `|`, to increase\
          \ the priority of multiple torrents, or set to `all`, to increase the priority\
          \ of all torrents."
        required: true
      responses:
        "200":
          description: All other scenarios
        "409":
          description: Torrent queueing is not enabled
      security:
      - sid: []
      summary: Increase torrent priority
      tags:
      - torrents
  /torrents/decreasePrio:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#decrease-torrent-priority
      operationId: torrentsDecreasePrioPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 54eddd830a5b58480a6143d616a97e3a6c23c439
            schema:
              $ref: '#/components/schemas/Hashes'
        description: "The hashes of the torrents you want to decrease the priority\
          \ of. `hashes` can contain multiple hashes separated by `|`, to decrease\
          \ the priority of multiple torrents, or set to `all`, to decrease the priority\
          \ of all torrents."
        required: true
      responses:
        "200":
          description: All other scenarios
        "409":
          description: Torrent queueing is not enabled
      security:
      - sid: []
      summary: Decrease torrent priority
      tags:
      - torrents
  /torrents/topPrio:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#maximal-torrent-priority
      operationId: torrentsTopPrioPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 54eddd830a5b58480a6143d616a97e3a6c23c439
            schema:
              $ref: '#/components/schemas/Hashes'
        description: "The hashes of the torrents you want to set to the maximum priority.\
          \ `hashes` can contain multiple hashes separated by `|`, to set multiple\
          \ torrents to the maximum priority, or set to `all`, to set all torrents\
          \ to the maximum priority."
        required: true
      responses:
        "200":
          description: All other scenarios
        "409":
          description: Torrent queueing is not enabled
      security:
      - sid: []
      summary: Maximal torrent priority
      tags:
      - torrents
  /torrents/bottomPrio:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#minimal-torrent-priority
      operationId: torrentsBottomPrioPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 54eddd830a5b58480a6143d616a97e3a6c23c439
            schema:
              $ref: '#/components/schemas/Hashes'
        description: "The hashes of the torrents you want to set to the minimum priority.\
          \ `hashes` can contain multiple hashes separated by `|`, to set multiple\
          \ torrents to the minimum priority, or set to `all`, to set all torrents\
          \ to the minimum priority."
        required: true
      responses:
        "200":
          description: All other scenarios
        "409":
          description: Torrent queueing is not enabled
      security:
      - sid: []
      summary: Minimal torrent priority
      tags:
      - torrents
  /torrents/filePrio:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-file-priority
      operationId: torrentsFilePrioPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              id:
                explode: false
                style: pipeDelimited
            schema:
              $ref: '#/components/schemas/torrentsFilePrioPost_request'
        description: |
          `id` values correspond to file position inside the array returned by [torrent contents API](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-contents), e.g. `id=0` for first file, `id=1` for second file, etc.

          Since 2.8.2 it is reccomended to use `index` field returned by [torrent contents API](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-contents) (since the files can be filtered and the `index` value may differ from the position inside the response array).
        required: true
      responses:
        "200":
          description: All other scenarios
        "400":
          description: Priority is invalid or At least one file `id` is not a valid
            integer
        "404":
          description: Torrent hash was not found
        "409":
          description: Torrent metadata hasn't downloaded yet or At least one file
            `id` was not found
      security:
      - sid: []
      summary: Set file priority
      tags:
      - torrents
  /torrents/downloadLimit:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-download-limit
      operationId: torrentsDownloadLimitPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 284b83c9c7935002391129fd97f43db5d7cc2ba0
            schema:
              $ref: '#/components/schemas/Hashes'
        description: |
          ```
          POST /api/v2/torrents/downloadLimit HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`

          Server reply (example):
          ```
          HTTP/1.1 200 OK
          content-type: application/json
          content-length: length

          {"8c212779b4abde7c6bc608063a0d008b7e40ce32":338944,"284b83c9c7935002391129fd97f43db5d7cc2ba0":123}
          ```
          `8c212779b4abde7c6bc608063a0d008b7e40ce32` is the hash of the torrent and `338944` its download speed limit in bytes per second; this value will be zero if no limit is applied.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TorrentsLimit'
          description: All scenarios
      security:
      - sid: []
      summary: Get torrent download limit
      tags:
      - torrents
  /torrents/setDownloadLimit:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-torrent-download-limit
      operationId: torrentsSetDownloadLimitPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            schema:
              $ref: '#/components/schemas/SetTorrentsLimit'
        description: |
          ```
          POST /api/v2/torrents/setDownloadLimit HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&limit=131072
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all` `limit` is the download speed limit in bytes per second you want to set.
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Set torrent download limit
      tags:
      - torrents
  /torrents/setShareLimits:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-torrent-share-limit
      operationId: torrentsSetShareLimitsPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 284b83c9c7935002391129fd97f43db5d7cc2ba0
              ratioLimit: 1.0
              seedingTimeLimit: 60
            schema:
              $ref: '#/components/schemas/torrentsSetShareLimitsPost_request'
        description: |
          ```
          POST /api/v2/torrents/setShareLimits HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&ratioLimit=1.0&seedingTimeLimit=60
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Set torrent share limit
      tags:
      - torrents
  /torrents/uploadLimit:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-upload-limit
      operationId: torrentsUploadLimitPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 284b83c9c7935002391129fd97f43db5d7cc2ba0
            schema:
              $ref: '#/components/schemas/Hashes'
        description: |
          ```
          POST /api/v2/torrents/uploadLimit HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`

          Server reply (example):
          ```
          HTTP/1.1 200 OK
          content-type: application/json
          content-length: length

          {"8c212779b4abde7c6bc608063a0d008b7e40ce32":338944,"284b83c9c7935002391129fd97f43db5d7cc2ba0":123}
          ```
          `8c212779b4abde7c6bc608063a0d008b7e40ce32` is the hash of the torrent in the request and `338944` its upload speed limit in bytes per second; this value will be zero if no limit is applied.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TorrentsLimit'
          description: All scenarios
      security:
      - sid: []
      summary: Get torrent upload limit
      tags:
      - torrents
  /torrents/setUploadLimit:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-torrent-upload-limit
      operationId: torrentsSetUploadLimitPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            schema:
              $ref: '#/components/schemas/SetTorrentsLimit'
        description: |
          ```
          POST /api/v2/torrents/setUploadLimit HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&limit=131072
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all` `limit` is the upload speed limit in bytes per second you want to set.
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Set torrent upload limit
      tags:
      - torrents
  /torrents/setLocation:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-torrent-location
      operationId: torrentsSetLocationPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 284b83c9c7935002391129fd97f43db5d7cc2ba0
              location: /mnt/nfs/media
            schema:
              $ref: '#/components/schemas/torrentsSetLocationPost_request'
        description: |
          ```
          POST /api/v2/torrents/setLocation HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&location=/mnt/nfs/media
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`
        required: true
      responses:
        "200":
          description: All other scenarios
        "400":
          description: Save path is empty
        "403":
          description: User does not have write access to directory
        "409":
          description: Unable to create save path directory
      security:
      - sid: []
      summary: Set torrent location
      tags:
      - torrents
  /torrents/rename:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-torrent-name
      operationId: torrentsRenamePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/torrentsRenamePost_request'
        description: |
          ```
          POST /api/v2/torrents/rename HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hash=8c212779b4abde7c6bc608063a0d008b7e40ce32&name=This%20is%20a%20test
          ```
        required: true
      responses:
        "200":
          description: All other scenarios
        "404":
          description: Torrent hash is invalid
        "409":
          description: Torrent name is empty
      security:
      - sid: []
      summary: Set torrent name
      tags:
      - torrents
  /torrents/setCategory:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-torrent-category
      operationId: torrentsSetCategoryPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 284b83c9c7935002391129fd97f43db5d7cc2ba0
              category: CategoryName
            schema:
              $ref: '#/components/schemas/torrentsSetCategoryPost_request'
        description: |
          ```
          POST /api/v2/torrents/setCategory HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&category=CategoryName
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`
        required: true
      responses:
        "200":
          description: All other scenarios
        "409":
          description: Category name does not exist
      security:
      - sid: []
      summary: Set torrent category
      tags:
      - torrents
  /torrents/categories:
    get:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-all-categories
      operationId: torrentsCategoriesGet
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/TorrentsCategory'
                example: |
                  {
                      "Video": {
                          "name": "Video",
                          "savePath": "/home/user/torrents/video/"
                      },
                      "eBooks": {
                          "name": "eBooks",
                          "savePath": "/home/user/torrents/eBooks/"
                      }
                  }
                type: object
          description: All scenarios
      security:
      - sid: []
      summary: Get all categories
      tags:
      - torrents
  /torrents/createCategory:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#add-new-category
      operationId: torrentsCreateCategoryPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            example:
              category: CategoryName
              savePath: /path/to/dir
            schema:
              $ref: '#/components/schemas/torrentsCreateCategoryPost_request'
        description: |
          ```
          POST /api/v2/torrents/createCategory HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          category=CategoryName&savePath=/path/to/dir
          ```
          `category` is the category you want to create.
        required: true
      responses:
        "200":
          description: All other scenarios
        "400":
          description: Category name is empty
        "409":
          description: Category name is invalid
      security:
      - sid: []
      summary: Add new category
      tags:
      - torrents
  /torrents/editCategory:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#edit-category
      operationId: torrentsEditCategoryPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            example:
              category: CategoryName
              savePath: /path/to/save/torrents/to
            schema:
              $ref: '#/components/schemas/torrentsCreateCategoryPost_request'
        description: |
          ```
          POST /api/v2/torrents/editCategory HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          category=CategoryName&savePath=/path/to/save/torrents/to
          ```
        required: true
      responses:
        "200":
          description: All other scenarios
        "400":
          description: Category name is empty
        "409":
          description: Category editing failed
      security:
      - sid: []
      summary: Edit category
      tags:
      - torrents
  /torrents/removeCategories:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#remove-categories
      operationId: torrentsRemoveCategoriesPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/torrentsRemoveCategoriesPost_request'
        description: |
          ```
          POST /api/v2/torrents/removeCategories HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          categories=Category1%0ACategory2
          ```
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Remove categories
      tags:
      - torrents
  /torrents/addTags:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#add-torrent-tags
      operationId: torrentsAddTagsPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
              tags:
                explode: false
                style: form
            schema:
              $ref: '#/components/schemas/TorrentsTags'
        description: |
          ```
          POST /api/v2/torrents/addTags HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&tags=TagName1,TagName2
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`

          `tags` is the list of tags you want to add to passed torrents.
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Add torrent tags
      tags:
      - torrents
  /torrents/removeTags:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#remove-torrent-tags
      operationId: torrentsRemoveTagsPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
              tags:
                explode: false
                style: form
            schema:
              $ref: '#/components/schemas/TorrentsTags'
        description: |
          ```
          POST /api/v2/torrents/removeTags HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&tags=TagName1,TagName2
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`

          `tags` is the list of tags you want to remove from passed torrents. Empty list removes all tags from relevant torrents.
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Remove torrent tags
      tags:
      - torrents
  /torrents/tags:
    get:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-all-tags
      operationId: torrentsTagsGet
      responses:
        "200":
          content:
            application/json:
              schema:
                description: "Returns all tags in JSON format, e.g.:"
                example: |
                  [
                      "Tag 1",
                      "Tag 2"
                  ]
                items:
                  type: string
                type: array
          description: All scenarios
      security:
      - sid: []
      summary: Get all tags
      tags:
      - torrents
  /torrents/createTags:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#create-tags
      operationId: torrentsCreateTagsPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              tags:
                explode: false
                style: form
            schema:
              $ref: '#/components/schemas/torrentsCreateTagsPost_request'
        description: |
          ```
          POST /api/v2/torrents/createTags HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          tags=TagName1,TagName2
          ```
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Create tags
      tags:
      - torrents
  /torrents/deleteTags:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#delete-tags
      operationId: torrentsDeleteTagsPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              tags:
                explode: false
                style: form
            schema:
              $ref: '#/components/schemas/torrentsDeleteTagsPost_request'
        description: |
          ```
          POST /api/v2/torrents/deleteTags HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          tags=TagName1,TagName2
          ```
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Delete tags
      tags:
      - torrents
  /torrents/setAutoManagement:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-automatic-torrent-management
      operationId: torrentsSetAutoManagementPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 284b83c9c7935002391129fd97f43db5d7cc2ba0
              enable: true
            schema:
              $ref: '#/components/schemas/torrentsSetAutoManagementPost_request'
        description: |
          ```
          POST /api/v2/torrents/setAutoManagement HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&enable=true
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Set automatic torrent management
      tags:
      - torrents
  /torrents/toggleSequentialDownload:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#toggle-sequential-download
      operationId: torrentsToggleSequentialDownloadPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 54eddd830a5b58480a6143d616a97e3a6c23c439
            schema:
              $ref: '#/components/schemas/Hashes'
        description: "The hashes of the torrents you want to toggle sequential download\
          \ for. `hashes` can contain multiple hashes separated by `|`, to toggle\
          \ sequential download for multiple torrents, or set to `all`, to toggle\
          \ sequential download for all torrents."
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Toggle sequential download
      tags:
      - torrents
  /torrents/toggleFirstLastPiecePrio:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-firstlast-piece-priority
      operationId: torrentsToggleFirstLastPiecePrioPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            example:
              hashes:
              - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              - 54eddd830a5b58480a6143d616a97e3a6c23c439
            schema:
              $ref: '#/components/schemas/Hashes'
        description: "The hashes of the torrents you want to toggle the first/last\
          \ piece priority for. `hashes` can contain multiple hashes separated by\
          \ `|`, to toggle the first/last piece priority for multiple torrents, or\
          \ set to `all`, to toggle the first/last piece priority for all torrents."
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Set first/last piece priority
      tags:
      - torrents
  /torrents/setForceStart:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-force-start
      operationId: torrentsSetForceStartPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            schema:
              $ref: '#/components/schemas/SetTorrentsValue'
        description: |
          ```
          POST /api/v2/torrents/setForceStart HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32?value=true
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Set force start
      tags:
      - torrents
  /torrents/setSuperSeeding:
    post:
      description: "Requires knowing the torrent hash. You can get it from [torrent\
        \ list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)."
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-super-seeding
      operationId: torrentsSetSuperSeedingPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              hashes:
                explode: false
                style: pipeDelimited
            schema:
              $ref: '#/components/schemas/SetTorrentsValue'
        description: |
          ```
          POST /api/v2/torrents/setSuperSeeding HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32?value=true
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Set super seeding
      tags:
      - torrents
  /torrents/renameFile:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#rename-file
      operationId: torrentsRenameFilePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RenameTorrentFiles'
        required: true
      responses:
        "200":
          description: All other scenarios
        "400":
          description: Missing `newPath` parameter
        "409":
          description: "Invalid `newPath` or `oldPath`, or `newPath` already in use"
      security:
      - sid: []
      summary: Rename file
      tags:
      - torrents
  /torrents/renameFolder:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#rename-folder
      operationId: torrentsRenameFolderPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RenameTorrentFiles'
        required: true
      responses:
        "200":
          description: All other scenarios
        "400":
          description: Missing `newPath` parameter
        "409":
          description: "Invalid `newPath` or `oldPath`, or `newPath` already in use"
      security:
      - sid: []
      summary: Rename folder
      tags:
      - torrents
  /rss/addFolder:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#add-folder
      operationId: rssAddFolderPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/rssAddFolderPost_request'
        required: true
      responses:
        "200":
          description: All other scenarios
        "409":
          description: Failure to add folder
      security:
      - sid: []
      summary: Add folder
      tags:
      - rss
  /rss/addFeed:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#add-feed
      operationId: rssAddFeedPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/rssAddFeedPost_request'
        required: true
      responses:
        "200":
          description: All other scenarios
        "409":
          description: Failure to add feed
      security:
      - sid: []
      summary: Add feed
      tags:
      - rss
  /rss/removeItem:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#remove-item
      operationId: rssRemoveItemPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/rssRemoveItemPost_request'
        required: true
      responses:
        "200":
          description: All other scenarios
        "409":
          description: Failure to remove item
      security:
      - sid: []
      summary: Remove item
      tags:
      - rss
  /rss/moveItem:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#move-item
      operationId: rssMoveItemPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/rssMoveItemPost_request'
        required: true
      responses:
        "200":
          description: All other scenarios
        "409":
          description: Failure to move item
      security:
      - sid: []
      summary: Move item
      tags:
      - rss
  /rss/items:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-all-items
      operationId: rssItemsPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/rssItemsPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: "Returns all RSS items in JSON format, e.g.:"
                example: |
                  {
                      "HD-Torrents.org": "https://hd-torrents.org/rss.php",
                      "PowerfulJRE": "https://www.youtube.com/feeds/videos.xml?channel_id=UCzQUP1qoWDoEbmsQxvdjxgQ",
                      "The Pirate Bay": {
                          "Audio": "https://thepiratebay.org/rss//top100/100",
                          "Video": "https://thepiratebay.org/rss//top100/200"
                      }
                  }
                type: object
          description: All other scenarios
      security:
      - sid: []
      summary: Get all items
      tags:
      - rss
  /rss/markAsRead:
    post:
      description: If `articleId` is provided only the article is marked as read otherwise
        the whole feed is going to be marked as read.
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#mark-as-read
      operationId: rssMarkAsReadPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/rssMarkAsReadPost_request'
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Mark as read
      tags:
      - rss
  /rss/refreshItem:
    post:
      description: Refreshes folder or feed.
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#refresh-item
      operationId: rssRefreshItemPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/rssRefreshItemPost_request'
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Refresh item
      tags:
      - rss
  /rss/setRule:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-auto-downloading-rule
      operationId: rssSetRulePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              ruleDef:
                contentType: application/json
            schema:
              $ref: '#/components/schemas/rssSetRulePost_request'
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Set auto-downloading rule
      tags:
      - rss
  /rss/renameRule:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#rename-auto-downloading-rule
      operationId: rssRenameRulePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/rssRenameRulePost_request'
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Rename auto-downloading rule
      tags:
      - rss
  /rss/removeRule:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#remove-auto-downloading-rule
      operationId: rssRemoveRulePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/rssRemoveRulePost_request'
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Remove auto-downloading rule
      tags:
      - rss
  /rss/rules:
    get:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-all-auto-downloading-rules
      operationId: rssRulesGet
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/RssRuleDef'
                description: "Returns all auto-downloading rules in JSON format, e.g.:"
                example: |
                  {
                    "The Punisher": {
                      "enabled": false,
                      "mustContain": "The *Punisher*",
                      "mustNotContain": "",
                      "useRegex": false,
                      "episodeFilter": "1x01-;",
                      "smartFilter": false,
                      "previouslyMatchedEpisodes": [
                      ],
                      "affectedFeeds": [
                          "http://showrss.info/user/134567.rss?magnets=true"
                      ],
                      "ignoreDays": 0,
                      "lastMatch": "20 Nov 2017 09:05:11",
                      "addPaused": true,
                      "assignedCategory": "",
                      "savePath": "C:/Users/JohnDoe/Downloads/Punisher"
                    }
                  }
                type: object
          description: All scenarios
      security:
      - sid: []
      summary: Get all auto-downloading rules
      tags:
      - rss
  /rss/matchingArticles:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-all-articles-matching-a-rule
      operationId: rssMatchingArticlesPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/rssMatchingArticlesPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: "Returns all articles that match a rule by feed name\
                  \ in JSON format, e.g.:"
                example: |
                  {
                    "DistroWatch":[
                        "sparkylinux-5.11-i686-minimalgui.iso.torrent",
                        "sparkylinux-5.11-x86_64-minimalgui.iso.torrent",
                        "sparkylinux-5.11-i686-xfce.iso.torrent",
                        "bluestar-linux-5.6.3-2020.04.09-x86_64.iso.torrent",
                        "robolinux64-mate3d-v10.10.iso.torrent",
                    ],
                    "Linuxtracker":[
                        "[Alpine Linux] alpine-extended-3.11.6",
                        "[Alpine Linux] alpine-standard-3.11.6",
                        "[Linuxfx] linuxfx10-wxs-lts-beta5.iso",
                        "[Linux Lite] linux-lite-5.0-rc1-64bit.iso (MULTI)",
                        "[Scientific Linux] SL-7.8-x86_64-Pack",
                        "[NixOS] nixos-plasma5-20.03.1418.5272327b81e-x86_64-linux.iso"
                    ]
                  }
                type: object
          description: All scenarios
      security:
      - sid: []
      summary: Get all articles matching a rule
      tags:
      - rss
  /search/start:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#start-search
      operationId: searchStartPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              plugins:
                explode: false
                style: pipeDelimited
              category:
                explode: false
                style: pipeDelimited
            schema:
              $ref: '#/components/schemas/searchStartPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchJob'
          description: All other scenarios- see JSON below
        "409":
          description: User has reached the limit of max `Running` searches (currently
            set to 5)
      security:
      - sid: []
      summary: Start search
      tags:
      - search
  /search/stop:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#stop-search
      operationId: searchStopPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/searchStopPost_request'
        required: true
      responses:
        "200":
          description: All other scenarios
        "404":
          description: Search job was not found
      security:
      - sid: []
      summary: Stop search
      tags:
      - search
  /search/status:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-search-status
      operationId: searchStatusPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/searchStatusPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: The response is a JSON array of objects containing the
                  following fields
                example: |
                  [
                    {
                        "id": 12345,
                        "status": "Running",
                        "total": 170
                    }
                  ]
                items:
                  $ref: '#/components/schemas/SearchJobStatus'
                type: array
          description: All other scenarios- see JSON below
        "404":
          description: Search job was not found
      security:
      - sid: []
      summary: Get search status
      tags:
      - search
  /search/results:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-search-results
      operationId: searchResultsPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/searchResultsPost_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
          description: All other scenarios- see JSON below
        "404":
          description: Search job was not found
        "409":
          description: "Offset is too large, or too small (e.g. absolute value of\
            \ negative number is greater than # results)"
      security:
      - sid: []
      summary: Get search results
      tags:
      - search
  /search/delete:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#delete-search
      operationId: searchDeletePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/searchDeletePost_request'
        required: true
      responses:
        "200":
          description: All other scenarios
        "404":
          description: Search job was not found
      security:
      - sid: []
      summary: Delete search
      tags:
      - search
  /search/plugins:
    get:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-search-plugins
      operationId: searchPluginsGet
      responses:
        "200":
          content:
            application/json:
              schema:
                description: The response is a JSON array of objects containing the
                  following fields
                example: |
                  [
                    {
                        "enabled": true,
                        "fullName": "Legit Torrents",
                        "name": "legittorrents",
                        "supportedCategories": [{
                            "id": "all",
                            "name": "All categories"
                        }, {
                            "id": "anime",
                            "name": "Anime"
                        }, {
                            "id": "books",
                            "name": "Books"
                        }, {
                            "id": "games",
                            "name": "Games"
                        }, {
                            "id": "movies",
                            "name": "Movies"
                        }, {
                            "id": "music",
                            "name": "Music"
                        }, {
                            "id": "tv",
                            "name": "TV shows"
                        }],
                        "url": "http://www.legittorrents.info",
                        "version": "2.3"
                    }
                  ]
                items:
                  $ref: '#/components/schemas/SearchPlugin'
                type: array
          description: All scenarios- see JSON below
      security:
      - sid: []
      summary: Get search plugins
      tags:
      - search
  /search/installPlugin:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#install-search-plugin
      operationId: searchInstallPluginPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              sources:
                explode: false
                style: pipeDelimited
            schema:
              $ref: '#/components/schemas/searchInstallPluginPost_request'
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Install search plugin
      tags:
      - search
  /search/uninstallPlugin:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#uninstall-search-plugin
      operationId: searchUninstallPluginPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              names:
                explode: false
                style: pipeDelimited
            schema:
              $ref: '#/components/schemas/searchUninstallPluginPost_request'
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Uninstall search plugin
      tags:
      - search
  /search/enablePlugin:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#enable-search-plugin
      operationId: searchEnablePluginPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              names:
                explode: false
                style: pipeDelimited
            schema:
              $ref: '#/components/schemas/searchEnablePluginPost_request'
        required: true
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Enable search plugin
      tags:
      - search
  /search/updatePlugins:
    post:
      externalDocs:
        description: WebUI-API on qBittorrent wiki
        url: https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#update-search-plugins
      operationId: searchUpdatePluginsPost
      responses:
        "200":
          description: All scenarios
      security:
      - sid: []
      summary: Update search plugins
      tags:
      - search
components:
  schemas:
    BuildInfo:
      description: The response is a JSON object containing the following fields
      example:
        bitness: 0
        libtorrent: libtorrent
        qt: qt
        openssl: openssl
        boost: boost
      properties:
        qt:
          type: string
        libtorrent:
          type: string
        boost:
          type: string
        openssl:
          type: string
        bitness:
          format: int32
          type: integer
      type: object
    Preferences:
      additionalProperties: true
      description: 'Possible fields:'
      example:
        embedded_tracker_port: 0
        web_ui_max_auth_fail_count: 2
        limit_lan_peers: true
        max_ratio_enabled: true
        web_ui_domain_list:
        - web_ui_domain_list
        - web_ui_domain_list
        proxy_password: proxy_password
        web_ui_ban_duration: 6
        alternative_webui_path: alternative_webui_path
        announce_to_all_trackers: true
        send_buffer_watermark: 7
        torrent_changed_tmm_enabled: true
        dl_limit: 4
        autorun_program: autorun_program
        async_io_threads: 7
        resolve_peer_countries: true
        web_ui_clickjacking_protection_enabled: true
        bypass_auth_subnet_whitelist_enabled: true
        rss_auto_downloading_enabled: true
        temp_path_enabled: true
        pex: true
        incomplete_files_ext: true
        send_buffer_low_watermark: 3
        scan_dirs:
          key: null
        preallocate_all: true
        dyndns_username: dyndns_username
        current_network_interface: current_network_interface
        autorun_enabled: true
        scheduler_days: 9
        mail_notification_ssl_enabled: true
        limit_tcp_overhead: true
        proxy_peer_connections: true
        dyndns_enabled: true
        random_port: true
        anonymous_mode: true
        rss_max_articles_per_feed: 3
        ip_filter_enabled: true
        mail_notification_smtp: mail_notification_smtp
        web_ui_https_cert_path: web_ui_https_cert_path
        ssl_cert: ssl_cert
        enable_coalesce_read_write: true
        schedule_to_hour: 6
        banned_IPs: banned_IPs
        rss_processing_enabled: true
        save_path: save_path
        save_path_changed_tmm_enabled: true
        encryption: 6
        proxy_auth_enabled: true
        ip_filter_path: ip_filter_path
        web_ui_csrf_protection_enabled: true
        max_ratio_act: 3
        mail_notification_email: mail_notification_email
        ssl_key: ssl_key
        upnp_lease_duration: 6
        proxy_username: proxy_username
        web_ui_address: web_ui_address
        max_connec: 1
        export_dir_fin: export_dir_fin
        announce_ip: announce_ip
        add_trackers: add_trackers
        stop_tracker_timeout: 7
        dht: true
        web_ui_username: web_ui_username
        send_buffer_watermark_factor: 5
        slow_torrent_dl_rate_threshold: 5
        current_interface_address: current_interface_address
        web_ui_host_header_validation_enabled: true
        max_seeding_time: 3
        dont_count_slow_torrents: true
        schedule_from_hour: 9
        use_https: true
        proxy_type: 3
        disk_cache: 7
        max_ratio: 9.301444
        web_ui_port: 1
        rss_refresh_interval: 6
        upload_slots_behavior: 0
        limit_utp_rate: true
        bittorrent_protocol: 1
        dyndns_password: dyndns_password
        disk_cache_ttl: 6
        enable_piece_extent_affinity: true
        bypass_local_auth: true
        upload_choking_algorithm: 4
        enable_os_cache: true
        ip_filter_trackers: true
        schedule_from_min: 9
        queueing_enabled: true
        category_changed_tmm_enabled: true
        max_uploads_per_torrent: 6
        max_seeding_time_enabled: true
        socket_backlog_size: 3
        web_ui_upnp: true
        proxy_port: 6
        listen_port: 2
        bypass_auth_subnet_whitelist:
        - bypass_auth_subnet_whitelist
        - bypass_auth_subnet_whitelist
        mail_notification_sender: mail_notification_sender
        upnp: true
        web_ui_use_custom_http_headers_enabled: true
        create_subfolder_enabled: true
        max_active_downloads: 6
        alt_up_limit: 5
        slow_torrent_inactive_timer: 7
        max_active_uploads: 5
        lsd: true
        utp_tcp_mixed_mode: 4
        auto_delete_mode: 0
        slow_torrent_ul_rate_threshold: 2
        outgoing_ports_min: 7
        web_ui_https_key_path: web_ui_https_key_path
        enable_multi_connections_from_same_ip: true
        proxy_torrents_only: true
        locale: locale
        alternative_webui_enabled: true
        max_connec_per_torrent: 1
        rss_download_repack_proper_episodes: true
        alt_dl_limit: 4
        recheck_completed_torrents: true
        enable_upload_suggestions: true
        mail_notification_password: mail_notification_password
        save_resume_data_interval: 3
        schedule_to_min: 8
        web_ui_custom_http_headers: web_ui_custom_http_headers
        dyndns_service: 5
        temp_path: temp_path
        dyndns_domain: dyndns_domain
        proxy_ip: proxy_ip
        max_uploads: 1
        announce_to_all_tiers: true
        mail_notification_enabled: true
        enable_embedded_tracker: true
        web_ui_session_timeout: 6
        file_pool_size: 4
        start_paused_enabled: true
        rss_smart_episode_filters: rss_smart_episode_filters
        web_ui_secure_cookie_enabled: true
        add_trackers_enabled: true
        checking_memory_use: 0
        mail_notification_auth_enabled: true
        up_limit: 7
        scheduler_enabled: true
        auto_tmm_enabled: true
        outgoing_ports_max: 8
        max_active_torrents: 1
        mail_notification_username: mail_notification_username
        export_dir: export_dir
      properties:
        locale:
          description: Currently selected language (e.g. en_GB for English)
          type: string
        create_subfolder_enabled:
          description: True if a subfolder should be created when adding a torrent
          type: boolean
        start_paused_enabled:
          description: True if torrents should be added in a Paused state
          type: boolean
        auto_delete_mode:
          description: TODO
          type: integer
        preallocate_all:
          description: True if disk space should be pre-allocated for all files
          type: boolean
        incomplete_files_ext:
          description: True if ".!qB" should be appended to incomplete files
          type: boolean
        auto_tmm_enabled:
          description: True if Automatic Torrent Management is enabled by default
          type: boolean
        torrent_changed_tmm_enabled:
          description: True if torrent should be relocated when its Category changes
          type: boolean
        save_path_changed_tmm_enabled:
          description: True if torrent should be relocated when the default save path
            changes
          type: boolean
        category_changed_tmm_enabled:
          description: True if torrent should be relocated when its Category's save
            path changes
          type: boolean
        save_path:
          description: "Default save path for torrents, separated by slashes"
          type: string
        temp_path_enabled:
          description: True if folder for incomplete torrents is enabled
          type: boolean
        temp_path:
          description: "Path for incomplete torrents, separated by slashes"
          type: string
        scan_dirs:
          additionalProperties:
            $ref: '#/components/schemas/Preferences_scan_dirs_value'
          description: |
            Property: directory to watch for torrent files, value: where torrents loaded from this directory should be downloaded to (see list of possible values below). Slashes are used as path separators; multiple key/value pairs can be specified

            | Value                  | Description                       |
            | ---------------------- | --------------------------------- |
            | 0                      | Download to the monitored folder  |
            | 1                      | Download to the default save path |
            | "/path/to/download/to" | Download to this path             |
          type: object
        export_dir:
          description: Path to directory to copy .torrent files to. Slashes are used
            as path separators
          type: string
        export_dir_fin:
          description: Path to directory to copy .torrent files of completed downloads
            to. Slashes are used as path separators
          type: string
        mail_notification_enabled:
          description: True if e-mail notification should be enabled
          type: boolean
        mail_notification_sender:
          description: e-mail where notifications should originate from
          type: string
        mail_notification_email:
          description: e-mail to send notifications to
          type: string
        mail_notification_smtp:
          description: smtp server for e-mail notifications
          type: string
        mail_notification_ssl_enabled:
          description: True if smtp server requires SSL connection
          type: boolean
        mail_notification_auth_enabled:
          description: True if smtp server requires authentication
          type: boolean
        mail_notification_username:
          description: Username for smtp authentication
          type: string
        mail_notification_password:
          description: Password for smtp authentication
          format: password
          type: string
        autorun_enabled:
          description: True if external program should be run after torrent has finished
            downloading
          type: boolean
        autorun_program:
          description: "Program path/name/arguments to run if `autorun_enabled` is\
            \ enabled; path is separated by slashes; you can use `%f` and `%n` arguments,\
            \ which will be expanded by qBittorent as path_to_torrent_file and torrent_name\
            \ (from the GUI; not the .torrent file name) respectively"
          type: string
        queueing_enabled:
          description: True if torrent queuing is enabled
          type: boolean
        max_active_downloads:
          description: Maximum number of active simultaneous downloads
          format: int64
          type: integer
        max_active_torrents:
          description: Maximum number of active simultaneous downloads and uploads
          format: int64
          type: integer
        max_active_uploads:
          description: Maximum number of active simultaneous uploads
          format: int64
          type: integer
        dont_count_slow_torrents:
          description: "If true torrents w/o any activity (stalled ones) will not\
            \ be counted towards `max_active_*` limits; see [dont_count_slow_torrents](https://www.libtorrent.org/reference-Settings.html#dont_count_slow_torrents)\
            \ for more information"
          externalDocs:
            description: libtorrent settings reference
            url: https://www.libtorrent.org/reference-Settings.html#dont_count_slow_torrents
          type: boolean
        slow_torrent_dl_rate_threshold:
          description: Download rate in KiB/s for a torrent to be considered "slow"
          format: int64
          type: integer
        slow_torrent_ul_rate_threshold:
          description: Upload rate in KiB/s for a torrent to be considered "slow"
          format: int64
          type: integer
        slow_torrent_inactive_timer:
          description: Seconds a torrent should be inactive before considered "slow"
          format: int64
          type: integer
        max_ratio_enabled:
          description: True if share ratio limit is enabled
          type: boolean
        max_ratio:
          description: Get the global share ratio limit
          format: float
          type: number
        max_ratio_act:
          description: |
            Action performed when a torrent reaches the maximum share ratio. See list of possible values here below.

            | Value | Description    |
            | ----- | -------------- |
            | 0     | Pause torrent  |
            | 1     | Remove torrent |
          enum:
          - 0
          - 1
          format: int64
          type: integer
        listen_port:
          description: Port for incoming connections
          format: int32
          type: integer
        upnp:
          description: True if UPnP/NAT-PMP is enabled
          type: boolean
        random_port:
          description: True if the port is randomly selected
          type: boolean
        dl_limit:
          description: Global download speed limit in KiB/s; `-1` means no limit is
            applied
          format: int64
          type: integer
        up_limit:
          description: Global upload speed limit in KiB/s; `-1` means no limit is
            applied
          format: int64
          type: integer
        max_connec:
          description: Maximum global number of simultaneous connections
          format: int64
          type: integer
        max_connec_per_torrent:
          description: Maximum number of simultaneous connections per torrent
          format: int64
          type: integer
        max_uploads:
          description: Maximum number of upload slots
          format: int64
          type: integer
        max_uploads_per_torrent:
          description: Maximum number of upload slots per torrent
          format: int64
          type: integer
        stop_tracker_timeout:
          description: Timeout in seconds for a `stopped` announce request to trackers
          format: int64
          type: integer
        enable_piece_extent_affinity:
          description: True if the advanced libtorrent option `piece_extent_affinity`
            is enabled
          type: boolean
        bittorrent_protocol:
          description: |
            Bittorrent Protocol to use (see list of possible values below)

            | Value | Description |
            | ----- | ----------- |
            | 0     | TCP and μTP |
            | 1     | TCP         |
            | 2     | μTP         |
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        limit_utp_rate:
          description: "True if `[du]l_limit` should be applied to uTP connections;\
            \ this option is only available in qBittorent built against libtorrent\
            \ version 0.16.X and higher"
          type: boolean
        limit_tcp_overhead:
          description: "True if `[du]l_limit` should be applied to estimated TCP overhead\
            \ (service data: e.g. packet headers)"
          type: boolean
        limit_lan_peers:
          description: "True if `[du]l_limit` should be applied to peers on the LAN"
          type: boolean
        alt_dl_limit:
          description: Alternative global download speed limit in KiB/s
          format: int64
          type: integer
        alt_up_limit:
          description: Alternative global upload speed limit in KiB/s
          format: int64
          type: integer
        scheduler_enabled:
          description: True if alternative limits should be applied according to schedule
          type: boolean
        schedule_from_hour:
          description: Scheduler starting hour
          format: int32
          type: integer
        schedule_from_min:
          description: Scheduler starting minute
          format: int32
          type: integer
        schedule_to_hour:
          description: Scheduler ending hour
          format: int32
          type: integer
        schedule_to_min:
          description: Scheduler ending minute
          format: int32
          type: integer
        scheduler_days:
          description: |
            Scheduler days. See possible values here below

            | Value | Description     |
            | ----- | --------------- |
            | 0     | Every day       |
            | 1     | Every weekday   |
            | 2     | Every weekend   |
            | 3     | Every Monday    |
            | 4     | Every Tuesday   |
            | 5     | Every Wednesday |
            | 6     | Every Thursday  |
            | 7     | Every Friday    |
            | 8     | Every Saturday  |
            | 9     | Every Sunday    |
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          format: int32
          type: integer
        dht:
          description: True if DHT is enabled
          type: boolean
        pex:
          description: True if PeX is enabled
          type: boolean
        lsd:
          description: True if LSD is enabled
          type: boolean
        encryption:
          description: |
            See list of possible values here below

            | Value | Description          |
            | ----- | -------------------- |
            | 0     | Prefer encryption    |
            | 1     | Force encryption on  |
            | 2     | Force encryption off |
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        anonymous_mode:
          description: "If true anonymous mode will be enabled; read more [here](https://github.com/qbittorrent/qBittorrent/wiki/Anonymous-Mode);\
            \ this option is only available in qBittorent built against libtorrent\
            \ version 0.16.X and higher"
          externalDocs:
            description: qBittorrent wiki
            url: https://github.com/qbittorrent/qBittorrent/wiki/Anonymous-Mode
          type: boolean
        proxy_type:
          description: |
            See list of possible values here below

            | Value | Description                         |
            | ----- | ----------------------------------- |
            | -1    | Proxy is disabled                   |
            | 0     | Prefer encryption                   |
            | 1     | HTTP proxy without authentication   |
            | 2     | SOCKS5 proxy without authentication |
            | 3     | HTTP proxy with authentication      |
            | 4     | SOCKS5 proxy with authentication    |
            | 5     | SOCKS4 proxy without authentication |
          enum:
          - -1
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          format: int32
          type: integer
        proxy_ip:
          description: Proxy IP address or domain name
          type: string
        proxy_port:
          description: Proxy port
          format: int32
          type: integer
        proxy_peer_connections:
          description: True if peer and web seed connections should be proxified;
            this option will have any effect only in qBittorent built against libtorrent
            version 0.16.X and higher
          type: boolean
        proxy_auth_enabled:
          description: True proxy requires authentication; doesn't apply to SOCKS4
            proxies
          type: boolean
        proxy_username:
          description: Username for proxy authentication
          type: string
        proxy_password:
          description: Password for proxy authentication
          format: password
          type: string
        proxy_torrents_only:
          description: True if proxy is only used for torrents
          type: boolean
        ip_filter_enabled:
          description: True if external IP filter should be enabled
          type: boolean
        ip_filter_path:
          description: "Path to IP filter file (.dat, .p2p, .p2b files are supported);\
            \ path is separated by slashes"
          type: string
        ip_filter_trackers:
          description: True if IP filters are applied to trackers
          type: boolean
        web_ui_domain_list:
          description: Comma-separated list of domains to accept when performing Host
            header validation
          items:
            type: string
          type: array
        web_ui_address:
          description: IP address to use for the WebUI
          type: string
        web_ui_port:
          description: WebUI port
          format: int32
          type: integer
        web_ui_upnp:
          description: True if UPnP is used for the WebUI port
          type: boolean
        web_ui_username:
          description: WebUI username
          type: string
        web_ui_csrf_protection_enabled:
          description: True if WebUI CSRF protection is enabled
          type: boolean
        web_ui_clickjacking_protection_enabled:
          description: True if WebUI clickjacking protection is enabled
          type: boolean
        web_ui_secure_cookie_enabled:
          description: True if WebUI cookie `Secure` flag is enabled
          type: boolean
        web_ui_max_auth_fail_count:
          description: Maximum number of authentication failures before WebUI access
            ban
          format: int64
          type: integer
        web_ui_ban_duration:
          description: WebUI access ban duration in seconds
          format: int64
          type: integer
        web_ui_session_timeout:
          description: Seconds until WebUI is automatically signed off
          format: int64
          type: integer
        web_ui_host_header_validation_enabled:
          description: True if WebUI host header validation is enabled
          type: boolean
        bypass_local_auth:
          description: True if authentication challenge for loopback address (127.0.0.1)
            should be disabled
          type: boolean
        bypass_auth_subnet_whitelist_enabled:
          description: True if webui authentication should be bypassed for clients
            whose ip resides within (at least) one of the subnets on the whitelist
          type: boolean
        bypass_auth_subnet_whitelist:
          description: (White)list of ipv4/ipv6 subnets for which webui authentication
            should be bypassed; list entries are separated by commas
          items:
            type: string
          type: array
        alternative_webui_enabled:
          description: True if an alternative WebUI should be used
          type: boolean
        alternative_webui_path:
          description: File path to the alternative WebUI
          type: string
        use_https:
          description: True if WebUI HTTPS access is enabled
          type: boolean
        ssl_key:
          description: "For API < v2.0.1: SSL keyfile contents (this is a not a path)"
          type: string
        ssl_cert:
          description: "For API < v2.0.1: SSL certificate contents (this is a not\
            \ a path)"
          type: string
        web_ui_https_key_path:
          description: "For API ≥ v2.0.1: Path to SSL keyfile"
          type: string
        web_ui_https_cert_path:
          description: "For API ≥ v2.0.1: Path to SSL certificate"
          type: string
        dyndns_enabled:
          description: True if server DNS should be updated dynamically
          type: boolean
        dyndns_service:
          description: |
            See list of possible values here below

            | Value | Description |
            | ----- | ----------- |
            | 0     | Use DyDNS   |
            | 1     | Use NOIP    |
          enum:
          - 0
          - 1
          format: int32
          type: integer
        dyndns_username:
          description: Username for DDNS service
          type: string
        dyndns_password:
          description: Password for DDNS service
          format: password
          type: string
        dyndns_domain:
          description: Your DDNS domain name
          type: string
        rss_refresh_interval:
          description: RSS refresh interval
          format: int64
          type: integer
        rss_max_articles_per_feed:
          description: Max stored articles per RSS feed
          format: int64
          type: integer
        rss_processing_enabled:
          description: Enable processing of RSS feeds
          type: boolean
        rss_auto_downloading_enabled:
          description: Enable auto-downloading of torrents from the RSS feeds
          type: boolean
        rss_download_repack_proper_episodes:
          description: "For API ≥ v2.5.1: Enable downloading of repack/proper Episodes"
          type: boolean
        rss_smart_episode_filters:
          description: "For API ≥ v2.5.1: List of RSS Smart Episode Filters"
          type: string
        add_trackers_enabled:
          description: Enable automatic adding of trackers to new torrents
          type: boolean
        add_trackers:
          description: List of trackers to add to new torrent
          type: string
        web_ui_use_custom_http_headers_enabled:
          description: "For API ≥ v2.5.1: Enable custom http headers"
          type: boolean
        web_ui_custom_http_headers:
          description: "For API ≥ v2.5.1: List of custom http headers"
          type: string
        max_seeding_time_enabled:
          description: True enables max seeding time
          type: boolean
        max_seeding_time:
          description: Number of minutes to seed a torrent
          format: int64
          type: integer
        announce_ip:
          description: TODO
          type: string
        announce_to_all_tiers:
          description: True always announce to all tiers
          type: boolean
        announce_to_all_trackers:
          description: True always announce to all trackers in a tier
          type: boolean
        async_io_threads:
          description: Number of asynchronous I/O threads
          format: int64
          type: integer
        banned_IPs:
          description: List of banned IPs
          type: string
        checking_memory_use:
          description: Outstanding memory when checking torrents in MiB
          format: int64
          type: integer
        current_interface_address:
          description: IP Address to bind to. Empty String means All addresses
          type: string
        current_network_interface:
          description: Network Interface used
          type: string
        disk_cache:
          description: Disk cache used in MiB
          format: int64
          type: integer
        disk_cache_ttl:
          description: Disk cache expiry interval in seconds
          format: int64
          type: integer
        embedded_tracker_port:
          description: Port used for embedded tracker
          format: int32
          type: integer
        enable_coalesce_read_write:
          description: True enables coalesce reads & writes
          type: boolean
        enable_embedded_tracker:
          description: True enables embedded tracker
          type: boolean
        enable_multi_connections_from_same_ip:
          description: True allows multiple connections from the same IP address
          type: boolean
        enable_os_cache:
          description: True enables os cache
          type: boolean
        enable_upload_suggestions:
          description: True enables sending of upload piece suggestions
          type: boolean
        file_pool_size:
          description: File pool size
          format: int64
          type: integer
        outgoing_ports_max:
          description: "Maximal outgoing port (0: Disabled)"
          format: int32
          type: integer
        outgoing_ports_min:
          description: "Minimal outgoing port (0: Disabled)"
          format: int32
          type: integer
        recheck_completed_torrents:
          description: True rechecks torrents on completion
          type: boolean
        resolve_peer_countries:
          description: True resolves peer countries
          type: boolean
        save_resume_data_interval:
          description: Save resume data interval in min
          format: int64
          type: integer
        send_buffer_low_watermark:
          description: Send buffer low watermark in KiB
          format: int64
          type: integer
        send_buffer_watermark:
          description: Send buffer watermark in KiB
          format: int64
          type: integer
        send_buffer_watermark_factor:
          description: Send buffer watermark factor in percent
          format: int32
          type: integer
        socket_backlog_size:
          description: Socket backlog size
          format: int64
          type: integer
        upload_choking_algorithm:
          description: |
            Upload choking algorithm used (see list of possible values below)

            | Value | Description    |
            | ----- | -------------- |
            | 0     | Round-robin    |
            | 1     | Fastest upload |
            | 2     | Anti-leech     |
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        upload_slots_behavior:
          description: |
            Upload slots behavior used (see list of possible values below)

            | Value | Description       |
            | ----- | ----------------- |
            | 0     | Fixed slots       |
            | 1     | Upload rate based |
          enum:
          - 0
          - 1
          format: int32
          type: integer
        upnp_lease_duration:
          description: "UPnP lease duration (0: Permanent lease)"
          format: int64
          type: integer
        utp_tcp_mixed_mode:
          description: |
            μTP-TCP mixed mode algorithm (see list of possible values below)

            | Value | Description       |
            | ----- | ----------------- |
            | 0     | Prefer TCP        |
            | 1     | Peer proportional |
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    SetPreferences:
      allOf:
      - $ref: '#/components/schemas/Preferences'
      - $ref: '#/components/schemas/SetPreferences_allOf'
      description: A json object with key-value pairs of the settings you want to
        change and their new values.
    MainLog:
      example:
        id: 0
        message: message
        type: 1
        timestamp: 6
      properties:
        id:
          description: ID of the message
          format: int64
          type: integer
        message:
          description: Text of the message
          type: string
        timestamp:
          description: Milliseconds since epoch
          format: int64
          type: integer
        type:
          description: "Type of the message: Log::NORMAL: `1`, Log::INFO: `2`, Log::WARNING:\
            \ `4`, Log::CRITICAL: `8`"
          enum:
          - 1
          - 2
          - 4
          - 8
          format: int32
          type: integer
      type: object
    PeersLog:
      example:
        reason: reason
        blocked: true
        ip: ip
        id: 0
        timestamp: 6
      properties:
        id:
          description: ID of the peer
          format: int64
          type: integer
        ip:
          description: IP of the peer
          type: string
        timestamp:
          description: Milliseconds since epoch
          format: int64
          type: integer
        blocked:
          description: Whether or not the peer was blocked
          type: boolean
        reason:
          description: Reason of the block
          type: string
      type: object
    MainData:
      description: The response is a JSON object with the following possible fields
      example:
        full_update: true
        torrents_removed:
        - torrents_removed
        - torrents_removed
        torrents:
          key:
            amount_left: 1
            max_ratio: 1.2315135
            auto_tmm: true
            seeding_time: 6
            availability: 5.962134
            num_incomplete: 6
            seeding_time_limit: 8
            force_start: true
            save_path: save_path
            num_seeds: 1
            dl_limit: 7
            eta: 4
            last_activity: 7
            num_leechs: 7
            num_complete: 1
            seen_complete: 9
            tracker: tracker
            uploaded: 2
            completion_on: 2
            ratio_limit: 9.36931
            state: error
            added_on: 6
            time_active: 3
            total_size: 6
            seq_dl: true
            downloaded_session: 2
            completed: 5
            f_l_piece_prio: true
            priority: 4
            super_seeding: true
            upspeed: 6
            downloaded: 3
            tags: tags
            uploaded_session: 6
            size: 6
            up_limit: 1
            magnet_uri: magnet_uri
            max_seeding_time: 1
            name: name
            content_path: content_path
            progress: 5.025005
            category: category
            dlspeed: 9
            hash: hash
            ratio: 9.965781
        categories:
          key:
            savePath: savePath
            name: name
        rid: 0
        categories_removed:
        - categories_removed
        - categories_removed
        tags_removed:
        - tags_removed
        - tags_removed
        server_state: |
          {
            "connection_status":"connected",
            "dht_nodes":386,
            "dl_info_data":681521119,
            "dl_info_speed":0,
            "dl_rate_limit":0,
            "up_info_data":10747904,
            "up_info_speed":0,
            "up_rate_limit":1048576
          }
        tags:
        - tags
        - tags
      properties:
        rid:
          description: Response ID
          format: int64
          type: integer
        full_update:
          description: Whether the response contains all the data or partial data
          type: boolean
        torrents:
          additionalProperties:
            $ref: '#/components/schemas/TorrentInfo'
          description: "Property: torrent hash, value: same as [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)"
          type: object
        torrents_removed:
          description: List of hashes of torrents removed since last request
          items:
            type: string
          type: array
        categories:
          additionalProperties:
            $ref: '#/components/schemas/TorrentsCategory'
          description: Info for categories added since last request
          type: object
        categories_removed:
          description: List of categories removed since last request
          items:
            type: string
          type: array
        tags:
          description: List of tags added since last request
          items:
            type: string
          type: array
        tags_removed:
          description: List of tags removed since last request
          items:
            type: string
          type: array
        server_state:
          $ref: '#/components/schemas/TransferInfo'
      type: object
    TorrentPeers:
      description: The response is TODO
      type: object
    TransferInfo:
      description: |
        The response is a JSON object with the following fields

        In addition to the above in partial data requests (see [Get partial data](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-partial-data) for more info):
      example: |
        {
          "connection_status":"connected",
          "dht_nodes":386,
          "dl_info_data":681521119,
          "dl_info_speed":0,
          "dl_rate_limit":0,
          "up_info_data":10747904,
          "up_info_speed":0,
          "up_rate_limit":1048576
        }
      properties:
        dl_info_speed:
          description: Global download rate (bytes/s)
          format: int64
          type: integer
        dl_info_data:
          description: Data downloaded this session (bytes)
          format: int64
          type: integer
        up_info_speed:
          description: Global upload rate (bytes/s)
          format: int64
          type: integer
        up_info_data:
          description: Data uploaded this session (bytes)
          format: int64
          type: integer
        dl_rate_limit:
          description: Download rate limit (bytes/s)
          format: int64
          type: integer
        up_rate_limit:
          description: Upload rate limit (bytes/s)
          format: int64
          type: integer
        dht_nodes:
          description: DHT nodes connected to
          format: int64
          type: integer
        connection_status:
          description: |
            Connection status. See possible values here below

            Possible values of connection_status:
            | Value        |
            | ------------ |
            | connected    |
            | firewalled   |
            | disconnected |
          type: string
        queueing:
          description: True if torrent queueing is enabled
          type: boolean
        use_alt_speed_limits:
          description: True if alternative speed limits are enabled
          type: boolean
        refresh_interval:
          description: Transfer list refresh interval (milliseconds)
          format: int64
          type: integer
      type: object
    TorrentInfo:
      example:
        amount_left: 1
        max_ratio: 1.2315135
        auto_tmm: true
        seeding_time: 6
        availability: 5.962134
        num_incomplete: 6
        seeding_time_limit: 8
        force_start: true
        save_path: save_path
        num_seeds: 1
        dl_limit: 7
        eta: 4
        last_activity: 7
        num_leechs: 7
        num_complete: 1
        seen_complete: 9
        tracker: tracker
        uploaded: 2
        completion_on: 2
        ratio_limit: 9.36931
        state: error
        added_on: 6
        time_active: 3
        total_size: 6
        seq_dl: true
        downloaded_session: 2
        completed: 5
        f_l_piece_prio: true
        priority: 4
        super_seeding: true
        upspeed: 6
        downloaded: 3
        tags: tags
        uploaded_session: 6
        size: 6
        up_limit: 1
        magnet_uri: magnet_uri
        max_seeding_time: 1
        name: name
        content_path: content_path
        progress: 5.025005
        category: category
        dlspeed: 9
        hash: hash
        ratio: 9.965781
      properties:
        added_on:
          description: Time (Unix Epoch) when the torrent was added to the client
          format: int64
          type: integer
        amount_left:
          description: Amount of data left to download (bytes)
          format: int64
          type: integer
        auto_tmm:
          description: Whether this torrent is managed by Automatic Torrent Management
          type: boolean
        availability:
          description: Percentage of file pieces currently available
          format: float
          type: number
        category:
          description: Category of the torrent
          type: string
        completed:
          description: Amount of transfer data completed (bytes)
          format: int64
          type: integer
        completion_on:
          description: Time (Unix Epoch) when the torrent completed
          format: int64
          type: integer
        content_path:
          description: "Absolute path of torrent content (root path for multifile\
            \ torrents, absolute file path for singlefile torrents)"
          type: string
        dl_limit:
          description: Torrent download speed limit (bytes/s). `-1` if ulimited.
          format: int64
          type: integer
        dlspeed:
          description: Torrent download speed (bytes/s)
          format: int64
          type: integer
        downloaded:
          description: Amount of data downloaded
          format: int64
          type: integer
        downloaded_session:
          description: Amount of data downloaded this session
          format: int64
          type: integer
        eta:
          description: Torrent ETA (seconds)
          format: int64
          type: integer
        f_l_piece_prio:
          description: True if first last piece are prioritized
          type: boolean
        force_start:
          description: True if force start is enabled for this torrent
          type: boolean
        hash:
          description: Torrent hash
          type: string
        last_activity:
          description: Last time (Unix Epoch) when a chunk was downloaded/uploaded
          format: int64
          type: integer
        magnet_uri:
          description: Magnet URI corresponding to this torrent
          type: string
        max_ratio:
          description: Maximum share ratio until torrent is stopped from seeding/uploading
          format: float
          type: number
        max_seeding_time:
          description: Maximum seeding time (seconds) until torrent is stopped from
            seeding
          format: int64
          type: integer
        name:
          description: Torrent name
          type: string
        num_complete:
          description: Number of seeds in the swarm
          format: int64
          type: integer
        num_incomplete:
          description: Number of leechers in the swarm
          format: int64
          type: integer
        num_leechs:
          description: Number of leechers connected to
          format: int64
          type: integer
        num_seeds:
          description: Number of seeds connected to
          format: int64
          type: integer
        priority:
          description: Torrent priority. Returns -1 if queuing is disabled or torrent
            is in seed mode
          format: int64
          type: integer
        progress:
          description: Torrent progress (percentage/100)
          format: float
          type: number
        ratio:
          description: "Torrent share ratio. Max ratio value: 9999."
          format: float
          type: number
        ratio_limit:
          description: TODO (what is different from max_ratio?)
          format: float
          type: number
        save_path:
          description: Path where this torrent's data is stored
          type: string
        seeding_time:
          description: Torrent elapsed time while complete (seconds)
          format: int64
          type: integer
        seeding_time_limit:
          description: "TODO (what is different from `max_seeding_time`?) seeding_time_limit\
            \ is a per torrent setting, when Automatic Torrent Management is disabled,\
            \ furthermore then max_seeding_time is set to seeding_time_limit for this\
            \ torrent. If Automatic Torrent Management is enabled, the value is -2.\
            \ And if max_seeding_time is unset it have a default value -1."
          format: int64
          type: integer
        seen_complete:
          description: Time (Unix Epoch) when this torrent was last seen complete
          format: int64
          type: integer
        seq_dl:
          description: True if sequential download is enabled
          type: boolean
        size:
          description: Total size (bytes) of files selected for download
          format: int64
          type: integer
        state:
          description: |
            Torrent state. See table here below for the possible values

            | Value              | Description                                                   |
            | ------------------ | ------------------------------------------------------------- |
            | error              | Some error occurred, applies to paused torrents               |
            | missingFiles       | Torrent data files is missing                                 |
            | uploading          | Torrent is being seeded and data is being transferred         |
            | pausedUP           | Torrent is paused and has finished downloading                |
            | queuedUP           | Queuing is enabled and torrent is queued for upload           |
            | stalledUP          | Torrent is being seeded, but no connection were made          |
            | checkingUP         | Torrent has finished downloading and is being checked         |
            | forcedUP           | Torrent is forced to uploading and ignore queue limit         |
            | allocating         | Torrent is allocating disk space for download                 |
            | downloading        | Torrent is being downloaded and data is being transferred     |
            | metaDL             | Torrent has just started downloading and is fetching metadata |
            | pausedDL           | Torrent is paused and has NOT finished downloading            |
            | queuedDL           | Queuing is enabled and torrent is queued for download         |
            | stalledDL          | Torrent is being downloaded, but no connection were made      |
            | checkingDL         | Same as checkingUP, but torrent has NOT finished downloading  |
            | forcedDL           | Torrent is forced to downloading to ignore queue limit        |
            | checkingResumeData | Checking resume data on qBt startup                           |
            | moving             | Torrent is moving to another location                         |
            | unknown            | Unknown status                                                |
          enum:
          - error
          - missingFiles
          - uploading
          - pausedUP
          - queuedUP
          - stalledUP
          - checkingUP
          - forcedUP
          - allocating
          - downloading
          - metaDL
          - pausedDL
          - queuedDL
          - stalledDL
          - checkingDL
          - forcedDL
          - checkingResumeData
          - moving
          - unknown
          type: string
        super_seeding:
          description: True if super seeding is enabled
          type: boolean
        tags:
          description: Comma-concatenated tag list of the torrent
          type: string
        time_active:
          description: Total active time (seconds)
          format: int64
          type: integer
        total_size:
          description: Total size (bytes) of all file in this torrent (including unselected
            ones)
          format: int64
          type: integer
        tracker:
          description: The first tracker with working status. Returns empty string
            if no tracker is working.
          type: string
        up_limit:
          description: Torrent upload speed limit (bytes/s). `-1` if ulimited.
          format: int64
          type: integer
        uploaded:
          description: Amount of data uploaded
          format: int64
          type: integer
        uploaded_session:
          description: Amount of data uploaded this session
          format: int64
          type: integer
        upspeed:
          description: Torrent upload speed (bytes/s)
          format: int64
          type: integer
      type: object
    TorrentsProperties:
      description: |
        The response is:
        - empty, if the torrent hash is invalid
        - otherwise, a JSON object with the following fields

        NB: `-1` is returned if the type of the property is integer but its value is not known.
      example:
        total_downloaded_session: 7
        seeding_time: 4
        last_seen: 5
        time_elapsed: 2
        share_ratio: 1.0246457
        peers: 9
        total_wasted: 1
        save_path: save_path
        dl_limit: 3
        eta: 4
        dl_speed_avg: 7
        pieces_have: 6
        addition_date: 1
        pieces_num: 8
        nb_connections: 7
        seeds: 6
        reannounce: 9
        total_size: 6
        creation_date: 0
        dl_speed: 1
        up_speed_avg: 1
        up_speed: 2
        seeds_total: 3
        created_by: created_by
        piece_size: 6
        nb_connections_limit: 1
        total_uploaded: 5
        up_limit: 9
        total_downloaded: 2
        comment: comment
        total_uploaded_session: 5
        completion_date: 6
        peers_total: 9
      properties:
        save_path:
          description: Torrent save path
          type: string
        creation_date:
          description: Torrent creation date (Unix timestamp)
          format: int64
          type: integer
        piece_size:
          description: Torrent piece size (bytes)
          format: int64
          type: integer
        comment:
          description: Torrent comment
          type: string
        total_wasted:
          description: Total data wasted for torrent (bytes)
          format: int64
          type: integer
        total_uploaded:
          description: Total data uploaded for torrent (bytes)
          format: int64
          type: integer
        total_uploaded_session:
          description: Total data uploaded this session (bytes)
          format: int64
          type: integer
        total_downloaded:
          description: Total data downloaded for torrent (bytes)
          format: int64
          type: integer
        total_downloaded_session:
          description: Total data downloaded this session (bytes)
          format: int64
          type: integer
        up_limit:
          description: Torrent upload limit (bytes/s)
          format: int64
          type: integer
        dl_limit:
          description: Torrent download limit (bytes/s)
          format: int64
          type: integer
        time_elapsed:
          description: Torrent elapsed time (seconds)
          format: int64
          type: integer
        seeding_time:
          description: Torrent elapsed time while complete (seconds)
          format: int64
          type: integer
        nb_connections:
          description: Torrent connection count
          format: int64
          type: integer
        nb_connections_limit:
          description: Torrent connection count limit
          format: int64
          type: integer
        share_ratio:
          description: Torrent share ratio
          format: float
          type: number
        addition_date:
          description: When this torrent was added (unix timestamp)
          format: int64
          type: integer
        completion_date:
          description: Torrent completion date (unix timestamp)
          format: int64
          type: integer
        created_by:
          description: Torrent creator
          type: string
        dl_speed_avg:
          description: Torrent average download speed (bytes/second)
          format: int64
          type: integer
        dl_speed:
          description: Torrent download speed (bytes/second)
          format: int64
          type: integer
        eta:
          description: Torrent ETA (seconds)
          format: int64
          type: integer
        last_seen:
          description: Last seen complete date (unix timestamp)
          format: int64
          type: integer
        peers:
          description: Number of peers connected to
          format: int64
          type: integer
        peers_total:
          description: Number of peers in the swarm
          format: int64
          type: integer
        pieces_have:
          description: Number of pieces owned
          format: int64
          type: integer
        pieces_num:
          description: Number of pieces of the torrent
          format: int64
          type: integer
        reannounce:
          description: Number of seconds until the next announce
          format: int64
          type: integer
        seeds:
          description: Number of seeds connected to
          format: int64
          type: integer
        seeds_total:
          description: Number of seeds in the swarm
          format: int64
          type: integer
        total_size:
          description: Torrent total size (bytes)
          format: int64
          type: integer
        up_speed_avg:
          description: Torrent average upload speed (bytes/second)
          format: int64
          type: integer
        up_speed:
          description: Torrent upload speed (bytes/second)
          format: int64
          type: integer
      type: object
    TorrentsTrackers:
      example:
        msg: msg
        num_seeds: 5
        tier: 6
        num_peers: 1
        num_leeches: 5
        num_downloaded: 2
        url: url
        status: 0
      properties:
        url:
          description: Tracker url
          type: string
        status:
          description: |
            Tracker status. See the table below for possible values

            | Value | Description                                                                        |
            | ----- | ---------------------------------------------------------------------------------- |
            | 0     | Tracker is disabled (used for DHT, PeX, and LSD)                                   |
            | 1     | Tracker has not been contacted yet                                                 |
            | 2     | Tracker has been contacted and is working                                          |
            | 3     | Tracker is updating                                                                |
            | 4     | Tracker has been contacted, but it is not working (or doesn't send proper replies) |
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          format: int32
          type: integer
        tier:
          description: "Tracker priority tier. Lower tier trackers are tried before\
            \ higher tiers. Tier numbers are valid when `>= 0`, `< 0` is used as placeholder\
            \ when `tier` does not exist for special entries (such as DHT)."
          format: int64
          type: integer
        num_peers:
          description: "Number of peers for current torrent, as reported by the tracker"
          format: int64
          type: integer
        num_seeds:
          description: "Number of seeds for current torrent, asreported by the tracker"
          format: int64
          type: integer
        num_leeches:
          description: "Number of leeches for current torrent, as reported by the\
            \ tracker"
          format: int64
          type: integer
        num_downloaded:
          description: "Number of completed downlods for current torrent, as reported\
            \ by the tracker"
          format: int64
          type: integer
        msg:
          description: Tracker message (there is no way of knowing what this message
            is - it's up to tracker admins)
          type: string
      type: object
    TorrentsWebseeds:
      properties:
        url:
          description: URL of the web seed
          type: string
      type: object
    TorrentsFiles:
      properties:
        index:
          description: File index
          format: int64
          type: integer
        name:
          description: File name (including relative path)
          type: string
        size:
          description: File size (bytes)
          format: int64
          type: integer
        progress:
          description: File progress (percentage/100)
          format: float
          type: number
        priority:
          description: |
            File priority. See possible values here below

            | Value | Description      |
            | ----- | ---------------- |
            | 0     | Do not download  |
            | 1     | Normal priority  |
            | 6     | High priority    |
            | 7     | Maximal priority |
          enum:
          - 0
          - 1
          - 6
          - 7
          format: int64
          type: integer
        is_seed:
          description: True if file is seeding/complete
          type: boolean
        piece_range:
          description: The first number is the starting piece index and the second
            number is the ending piece index (inclusive)
          items:
            format: int64
            type: integer
          type: array
        availability:
          description: Percentage of file pieces currently available (percentage/100)
          format: float
          type: number
      type: object
    Hashes:
      properties:
        hashes:
          items:
            type: string
          type: array
      required:
      - hashes
      type: object
    AddTorrentsURLs:
      allOf:
      - $ref: '#/components/schemas/AddTorrentsURLs_allOf'
      - $ref: '#/components/schemas/AddTorrentsCommon'
      required:
      - urls
    AddTorrentsFiles:
      allOf:
      - $ref: '#/components/schemas/AddTorrentsFiles_allOf'
      - $ref: '#/components/schemas/AddTorrentsCommon'
      required:
      - torrents
    TorrentsLimit:
      additionalProperties:
        format: int64
        type: integer
      example:
        "8c212779b4abde7c6bc608063a0d008b7e40ce32": 338944
        "284b83c9c7935002391129fd97f43db5d7cc2ba0": 123
      type: object
    SetTorrentsLimit:
      allOf:
      - $ref: '#/components/schemas/Hashes'
      - $ref: '#/components/schemas/SetTorrentsLimit_allOf'
      example:
        hashes:
        - 8c212779b4abde7c6bc608063a0d008b7e40ce32
        - 284b83c9c7935002391129fd97f43db5d7cc2ba0
        limit: 131072
      required:
      - hashes
      - limit
    TorrentsCategory:
      example:
        savePath: savePath
        name: name
      properties:
        name:
          type: string
        savePath:
          type: string
      type: object
    Category:
      properties:
        category:
          type: string
        savePath:
          type: string
      required:
      - category
      - savePath
      type: object
    TorrentsTags:
      allOf:
      - $ref: '#/components/schemas/Hashes'
      - $ref: '#/components/schemas/TorrentsTags_allOf'
      example:
        hashes:
        - 8c212779b4abde7c6bc608063a0d008b7e40ce32
        - 284b83c9c7935002391129fd97f43db5d7cc2ba0
        tags:
        - TagName1
        - TagName2
      required:
      - hashes
      - tags
    SetTorrentsValue:
      allOf:
      - $ref: '#/components/schemas/Hashes'
      - $ref: '#/components/schemas/SetTorrentsValue_allOf'
      example:
        hashes: 8c212779b4abde7c6bc608063a0d008b7e40ce32
        value: true
      required:
      - hashes
      - value
    RenameTorrentFiles:
      properties:
        hash:
          description: The hash of the torrent
          type: string
        oldPath:
          description: The old path of the torrent
          type: string
        newPath:
          description: The new path to use for the file
          type: string
      required:
      - hash
      - newPath
      - oldPath
      type: object
    RssRuleDef:
      description: |
        JSON encoded rule definition

        Rule definition is JSON encoded dictionary with the following fields:
        | Field                     | Type   | Description                                             |
        | ------------------------- | ------ | ------------------------------------------------------- |
        | enabled                   | bool   | Whether the rule is enabled                             |
        | mustContain               | string | The substring that the torrent name must contain        |
        | mustNotContain            | string | The substring that the torrent name must not contain    |
        | useRegex                  | bool   | Enable regex mode in "mustContain" and "mustNotContain" |
        | episodeFilter             | string | Episode filter definition                               |
        | smartFilter               | bool   | Enable smart episode filter                             |
        | previouslyMatchedEpisodes | list   | The list of episode IDs already matched by smart filter |
        | affectedFeeds             | list   | The feed URLs the rule applied to                       |
        | ignoreDays                | number | Ignore sunsequent rule matches                          |
        | lastMatch                 | string | The rule last match time                                |
        | addPaused                 | bool   | Add matched torrent in paused mode                      |
        | assignedCategory          | string | Assign category to the torrent                          |
        | savePath                  | string | Save torrent to the given directory                     |
      properties:
        enabled:
          description: Whether the rule is enabled
          type: boolean
        mustContain:
          description: The substring that the torrent name must contain
          type: string
        mustNotContain:
          description: The substring that the torrent name must not contain
          type: string
        useRegex:
          description: Enable regex mode in "mustContain" and "mustNotContain"
          type: boolean
        episodeFilter:
          description: Episode filter definition
          type: string
        smartFilter:
          description: Enable smart episode filter
          type: boolean
        previouslyMatchedEpisodes:
          description: The list of episode IDs already matched by smart filter
          items:
            format: int64
            type: integer
          type: array
        affectedFeeds:
          description: The feed URLs the rule applied to
          items:
            type: string
          type: array
        ignoreDays:
          description: Ignore sunsequent rule matches
          type: number
        lastMatch:
          description: The rule last match time
          type: string
        addPaused:
          description: Add matched torrent in paused mode
          type: boolean
        assignedCategory:
          description: Assign category to the torrent
          type: string
        savePath:
          description: Save torrent to the given directory
          type: string
      type: object
    SearchJob:
      description: The response is a JSON object with the following fields
      example: |
        {
          "id": 12345
        }
      properties:
        id:
          description: ID of the search job
          type: number
      type: object
    SearchJobStatus:
      allOf:
      - $ref: '#/components/schemas/SearchJob'
      - $ref: '#/components/schemas/SearchJobStatus_allOf'
    SearchResults:
      example: |
        {
          "results": [
              {
                  "descrLink": "http://www.legittorrents.info/index.php?page=torrent-details&id=8d5f512e1acb687029b8d7cc6c5a84dce51d7a41",
                  "fileName": "Ubuntu-10.04-32bit-NeTV.ova",
                  "fileSize": -1,
                  "fileUrl": "http://www.legittorrents.info/download.php?id=8d5f512e1acb687029b8d7cc6c5a84dce51d7a41&f=Ubuntu-10.04-32bit-NeTV.ova.torrent",
                  "nbLeechers": 1,
                  "nbSeeders": 0,
                  "siteUrl": "http://www.legittorrents.info"
              },
              {
                  "descrLink": "http://www.legittorrents.info/index.php?page=torrent-details&id=d5179f53e105dc2c2401bcfaa0c2c4936a6aa475",
                  "fileName": "mangOH-Legato-17_06-Ubuntu-16_04.ova",
                  "fileSize": -1,
                  "fileUrl": "http://www.legittorrents.info/download.php?id=d5179f53e105dc2c2401bcfaa0c2c4936a6aa475&f=mangOH-Legato-17_06-Ubuntu-16_04.ova.torrent",
                  "nbLeechers": 0,
                  "nbSeeders": 59,
                  "siteUrl": "http://www.legittorrents.info"
              }
          ],
          "status": "Running",
          "total": 2
        }
      properties:
        results:
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
        status:
          description: Current status of the search job (either `Running` or `Stopped`)
          enum:
          - Running
          - Stopped
          type: string
        total:
          description: Total number of results. If the status is `Running` this number
            may continue to increase
          type: number
      type: object
    SearchPlugin:
      properties:
        enabled:
          description: Whether the plugin is enabled
          type: boolean
        fullName:
          description: Full name of the plugin
          type: string
        name:
          description: Short name of the plugin
          type: string
        supportedCategories:
          description: List of category objects
          items:
            $ref: '#/components/schemas/SearchPlugin_supportedCategories_inner'
          type: array
        url:
          description: URL of the torrent site
          type: string
        version:
          description: Installed version of the plugin
          type: string
      type: object
    AddTorrentsCommon:
      properties:
        savepath:
          description: Download folder
          type: string
        cookie:
          description: Cookie sent to download the .torrent file
          type: string
        category:
          description: Category for the torrent
          type: string
        tags:
          description: "Tags for the torrent, split by ','"
          items:
            type: string
          type: array
        skip_checking:
          default: "false"
          description: "Skip hash checking. Possible values are `true`, `false` (default)"
          enum:
          - "true"
          - "false"
          type: string
        paused:
          default: "false"
          description: "Add torrents in the paused state. Possible values are `true`,\
            \ `false` (default)"
          enum:
          - "true"
          - "false"
          type: string
        root_folder:
          default: unset
          description: "Create the root folder. Possible values are `true`, `false`,\
            \ unset (default)"
          enum:
          - "true"
          - "false"
          - unset
          type: string
        rename:
          description: Rename torrent
          type: string
        upLimit:
          description: Set torrent upload speed limit. Unit in bytes/second
          format: int64
          type: integer
        dlLimit:
          description: Set torrent download speed limit. Unit in bytes/second
          format: int64
          type: integer
        ratioLimit:
          description: Set torrent share ratio limit
          format: float
          type: number
        seedingTimeLimit:
          description: Set torrent seeding time limit. Unit in seconds
          format: int64
          type: integer
        autoTMM:
          description: Whether Automatic Torrent Management should be used
          type: boolean
        sequentialDownload:
          default: "false"
          description: "Enable sequential download. Possible values are `true`, `false`\
            \ (default)"
          enum:
          - "true"
          - "false"
          type: string
        firstLastPiecePrio:
          default: "false"
          description: "Prioritize download first last piece. Possible values are\
            \ `true`, `false` (default)"
          enum:
          - "true"
          - "false"
          type: string
      type: object
    SearchResult:
      properties:
        descrLink:
          description: URL of the torrent's description page
          type: string
        fileName:
          description: Name of the file
          type: string
        fileSize:
          description: Size of the file in Bytes
          type: number
        fileUrl:
          description: Torrent download link (usually either .torrent file or magnet
            link)
          type: string
        nbLeechers:
          description: Number of leechers
          type: number
        nbSeeders:
          description: Number of seeders
          type: number
        siteUrl:
          description: URL of the torrent site
          type: string
      type: object
    authLoginPost_request:
      example: username=admin&password=adminadmin
      properties:
        username:
          type: string
        password:
          format: password
          type: string
      required:
      - password
      - username
      type: object
    appSetPreferencesPost_request:
      properties:
        json:
          $ref: '#/components/schemas/SetPreferences'
      required:
      - json
      type: object
    logMainPost_request:
      properties:
        normal:
          default: true
          description: "Include normal messages (default: `true`)"
          type: boolean
        info:
          default: true
          description: "Include info messages (default: `true`)"
          type: boolean
        warning:
          default: true
          description: "Include warning messages (default: `true`)"
          type: boolean
        critical:
          default: true
          description: "Include critical messages (default: `true`)"
          type: boolean
        last_known_id:
          default: -1
          description: "Exclude messages with \"message id\" <= `last_known_id` (default:\
            \ `-1`)"
          format: int64
          type: integer
      required:
      - critical
      - info
      - last_known_id
      - normal
      - warning
      type: object
    logPeersPost_request:
      properties:
        last_known_id:
          default: -1
          description: "Exclude messages with \"message id\" <= `last_known_id` (default:\
            \ `-1`)"
          format: int64
          type: integer
      required:
      - last_known_id
      type: object
    syncMaindataPost_request:
      properties:
        rid:
          description: "Response ID. If not provided, `rid=0` will be assumed. If\
            \ the given `rid` is different from the one of last server reply, `full_update`\
            \ will be `true` (see the server reply details for more info)"
          format: int64
          type: integer
      type: object
    syncTorrentPeersPost_request:
      properties:
        hash:
          description: Torrent hash
          type: string
        rid:
          description: "Response ID. If not provided, `rid=0` will be assumed. If\
            \ the given `rid` is different from the one of last server reply, `full_update`\
            \ will be `true` (see the server reply details for more info)"
          format: int64
          type: integer
      required:
      - hash
      type: object
    transferSetDownloadLimitPost_request:
      properties:
        limit:
          description: The global download speed limit to set in bytes/second
          format: int64
          type: integer
      type: object
    transferSetUploadLimitPost_request:
      properties:
        limit:
          description: The global upload speed limit to set in bytes/second
          format: int64
          type: integer
      type: object
    transferBanPeersPost_request:
      properties:
        peers:
          description: "The peer to ban, or multiple peers separated by a pipe `|`.\
            \ Each peer is a colon-separated `host:port`"
          items:
            type: string
          type: array
      type: object
    torrentsInfoPost_request:
      properties:
        filter:
          description: "Filter torrent list by state. Allowed state filters: `all`,\
            \ `downloading`, `seeding`, `completed`, `paused`, `active`, `inactive`,\
            \ `resumed`, `stalled`, `stalled_uploading`, `stalled_downloading`, `errored`"
          enum:
          - all
          - downloading
          - seeding
          - completed
          - paused
          - active
          - inactive
          - resumed
          - stalled
          - stalled_uploading
          - stalled_downloading
          - errored
          type: string
        category:
          description: "Get torrents with the given category (empty string means \"\
            without category\"; no \"category\" parameter means \"any category\" <-\
            \ broken until [#11748](https://github.com/qbittorrent/qBittorrent/issues/11748)\
            \ is resolved). Remember to URL-encode the category name. For example,\
            \ `My category` becomes `My%20category`"
          type: string
        tag:
          description: "Get torrents with the given tag (empty string means \"without\
            \ tag\"; no \"tag\" parameter means \"any tag\". Remember to URL-encode\
            \ the category name. For example, `My tag` becomes `My%20tag`"
          type: string
        sort:
          description: Sort torrents by given key. They can be sorted using any field
            of the response's JSON array (which are documented below) as the sort
            key.
          type: string
        reverse:
          default: false
          description: Enable reverse sorting. Defaults to `false`
          type: boolean
        limit:
          description: Limit the number of torrents returned
          format: int64
          type: integer
        offset:
          description: "Set offset (if less than 0, offset from end)"
          format: int64
          type: integer
        hashes:
          description: Filter by hashes. Can contain multiple hashes separated by
            `|`
          items:
            type: string
          type: array
      type: object
    torrentsPropertiesPost_request:
      properties:
        hash:
          description: The hash of the torrent you want to get the generic properties
            of
          type: string
      required:
      - hash
      type: object
    torrentsTrackersPost_request:
      properties:
        hash:
          description: The hash of the torrent you want to get the trackers of
          type: string
      required:
      - hash
      type: object
    torrentWebseedsPost_request:
      properties:
        hash:
          description: The hash of the torrent you want to get the webseeds of
          type: string
      required:
      - hash
      type: object
    torrentsFilesPost_request:
      properties:
        hash:
          description: The hash of the torrent you want to get the contents of
          type: string
        indexes:
          description: The indexes of the files you want to retrieve. `indexes` can
            contain multiple values separated by `|`.
          items:
            type: string
          type: array
      required:
      - hash
      type: object
    torrentsPieceStatesPost_request:
      properties:
        hash:
          description: The hash of the torrent you want to get the pieces' states
            of
          type: string
      required:
      - hash
      type: object
    torrentsPieceHashesPost_request:
      properties:
        hash:
          description: The hash of the torrent you want to get the pieces' hashes
            of
          type: string
      required:
      - hash
      type: object
    torrentsDeletePost_request_allOf:
      properties:
        deleteFiles:
          description: "If set to `true`, the downloaded data will also be deleted,\
            \ otherwise has no effect."
          type: boolean
      type: object
    torrentsDeletePost_request:
      allOf:
      - $ref: '#/components/schemas/Hashes'
      - $ref: '#/components/schemas/torrentsDeletePost_request_allOf'
      required:
      - deleteFiles
      - hashes
    torrentsAddPost_request:
      oneOf:
      - $ref: '#/components/schemas/AddTorrentsURLs'
      - $ref: '#/components/schemas/AddTorrentsFiles'
    torrentsAddTrackersPost_request:
      properties:
        hash:
          example: 8c212779b4abde7c6bc608063a0d008b7e40ce32
          type: string
        urls:
          example: http://192.168.0.1/announce%0Audp://192.168.0.1:3333/dummyAnnounce
          type: string
      required:
      - hash
      - urls
      type: object
    torrentsEditTrackerPost_request:
      properties:
        hash:
          description: The hash of the torrent
          type: string
        origUrl:
          description: The tracker URL you want to edit
          type: string
        newUrl:
          description: The new URL to replace the `origUrl`
          type: string
      required:
      - hash
      - newUrl
      - origUrl
      type: object
    torrentsRemoveTrackersPost_request:
      properties:
        hash:
          description: The hash of the torrent
          type: string
        urls:
          description: "URLs to remove, separated by `|`"
          items:
            type: string
          type: array
      required:
      - hash
      - urls
      type: object
    torrentsAddPeersPost_request:
      properties:
        hashes:
          description: "The hash of the torrent, or multiple hashes separated by a\
            \ pipe `|`"
          items:
            type: string
          type: array
        peers:
          description: "The peer to add, or multiple peers separated by a pipe `|`.\
            \ Each peer is a colon-separated `host:port`"
          items:
            type: string
          type: array
      required:
      - hashes
      - peers
      type: object
    torrentsFilePrioPost_request:
      properties:
        hash:
          description: The hash of the torrent
          type: string
        id:
          description: "File ids, separated by `|`"
          items:
            format: int64
            type: integer
          type: array
        priority:
          description: "File priority to set (consult [torrent contents API](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-contents)\
            \ for possible values)"
          enum:
          - 0
          - 1
          - 6
          - 7
          format: int32
          type: integer
      required:
      - hash
      - id
      - priority
      type: object
    torrentsSetShareLimitsPost_request_allOf:
      properties:
        ratioLimit:
          description: "`ratioLimit` is the max ratio the torrent should be seeded\
            \ until. `-2` means the global limit should be used, -1 means no limit."
          format: float
          type: number
        seedingTimeLimit:
          description: "`seedingTimeLimit` is the max amount of time the torrent should\
            \ be seeded. `-2` means the global limit should be used, `-1` means no\
            \ limit."
          format: float
          type: number
      type: object
    torrentsSetShareLimitsPost_request:
      allOf:
      - $ref: '#/components/schemas/Hashes'
      - $ref: '#/components/schemas/torrentsSetShareLimitsPost_request_allOf'
      required:
      - hashes
      - ratioLimit
      - seedingTimeLimit
    torrentsSetLocationPost_request_allOf:
      properties:
        location:
          description: "`location` is the location to download the torrent to. If\
            \ the location doesn't exist, the torrent's location is unchanged."
          type: string
      type: object
    torrentsSetLocationPost_request:
      allOf:
      - $ref: '#/components/schemas/Hashes'
      - $ref: '#/components/schemas/torrentsSetLocationPost_request_allOf'
      required:
      - hashes
      - location
    torrentsRenamePost_request:
      properties:
        hash:
          example: 8c212779b4abde7c6bc608063a0d008b7e40ce32
          type: string
        name:
          example: This%20is%20a%20test
          type: string
      required:
      - hash
      - name
      type: object
    torrentsSetCategoryPost_request_allOf:
      properties:
        category:
          description: '`category` is the torrent category you want to set.'
          type: string
      type: object
    torrentsSetCategoryPost_request:
      allOf:
      - $ref: '#/components/schemas/Hashes'
      - $ref: '#/components/schemas/torrentsSetCategoryPost_request_allOf'
      required:
      - category
      - hashes
    torrentsCreateCategoryPost_request:
      allOf:
      - $ref: '#/components/schemas/Category'
    torrentsRemoveCategoriesPost_request:
      properties:
        categories:
          description: '`categories` can contain multiple cateogies separated by `\n`
            (%0A urlencoded)'
          example: Category1%0ACategory2
          type: string
      required:
      - categories
      type: object
    torrentsCreateTagsPost_request:
      properties:
        tags:
          description: "`tags` is a list of tags you want to create. Can contain multiple\
            \ tags separated by `,`."
          example:
          - TagName1
          - TagName2
          items:
            type: string
          type: array
      required:
      - tags
      type: object
    torrentsDeleteTagsPost_request:
      properties:
        tags:
          description: "`tags` is a list of tags you want to delete. Can contain multiple\
            \ tags separated by `,`."
          example:
          - TagName1
          - TagName2
          items:
            type: string
          type: array
      required:
      - tags
      type: object
    torrentsSetAutoManagementPost_request_allOf:
      properties:
        enable:
          default: false
          description: "`enable` is a boolean, affects the torrents listed in `hashes`,\
            \ default is `false`"
          type: boolean
      type: object
    torrentsSetAutoManagementPost_request:
      allOf:
      - $ref: '#/components/schemas/Hashes'
      - $ref: '#/components/schemas/torrentsSetAutoManagementPost_request_allOf'
      required:
      - enable
      - hashes
    rssAddFolderPost_request:
      properties:
        path:
          description: Full path of added folder (e.g. "The Pirate Bay\Top100")
          type: string
      required:
      - path
      type: object
    rssAddFeedPost_request:
      properties:
        url:
          description: URL of RSS feed (e.g. "http://thepiratebay.org/rss//top100/200")
          type: string
        path:
          description: Full path of added folder (e.g. "The Pirate Bay\Top100\Video")
          type: string
      required:
      - url
      type: object
    rssRemoveItemPost_request:
      properties:
        path:
          description: Full path of removed item (e.g. "The Pirate Bay\Top100")
          type: string
      required:
      - path
      type: object
    rssMoveItemPost_request:
      properties:
        itemPath:
          description: Current full path of item (e.g. "The Pirate Bay\Top100")
          type: string
        destPath:
          description: New full path of item (e.g. "The Pirate Bay")
          type: string
      required:
      - destPath
      - itemPath
      type: object
    rssItemsPost_request:
      properties:
        withData:
          description: True if you need current feed articles
          type: boolean
      type: object
    rssMarkAsReadPost_request:
      properties:
        itemPath:
          description: Current full path of item (e.g. "The Pirate Bay\Top100")
          type: string
        articleId:
          description: ID of article
          type: string
      required:
      - itemPath
      type: object
    rssRefreshItemPost_request:
      properties:
        itemPath:
          description: Current full path of item (e.g. "The Pirate Bay\Top100")
          type: string
      required:
      - itemPath
      type: object
    rssSetRulePost_request:
      properties:
        ruleName:
          description: Rule name (e.g. "Punisher")
          type: string
        ruleDef:
          $ref: '#/components/schemas/RssRuleDef'
      required:
      - ruleDef
      - ruleName
      type: object
    rssRenameRulePost_request:
      properties:
        ruleName:
          description: Rule name (e.g. "Punisher")
          type: string
        newRuleName:
          description: New rule name (e.g. "The Punisher")
          type: string
      required:
      - newRuleName
      - ruleName
      type: object
    rssRemoveRulePost_request:
      properties:
        ruleName:
          description: Rule name (e.g. "Punisher")
          type: string
      required:
      - ruleName
      type: object
    rssMatchingArticlesPost_request:
      properties:
        ruleName:
          description: Rule name (e.g. "Linux")
          type: string
      required:
      - ruleName
      type: object
    searchStartPost_request:
      properties:
        pattern:
          description: Pattern to search for (e.g. "Ubuntu 18.04")
          type: string
        plugins:
          description: Plugins to use for searching (e.g. "legittorrents"). Supports
            multiple plugins separated by `|`. Also supports `all` and `enabled`
          items:
            type: string
          type: array
        category:
          description: Categories to limit your search to (e.g. "legittorrents").
            Available categories depend on the specified `plugins`. Also supports
            `all`
          items:
            type: string
          type: array
      required:
      - category
      - pattern
      - plugins
      type: object
    searchStopPost_request:
      allOf:
      - $ref: '#/components/schemas/SearchJob'
      required:
      - id
    searchStatusPost_request:
      properties:
        id:
          description: "ID of the search job. If not specified, all search jobs are\
            \ returned"
          type: number
      type: object
    searchResultsPost_request_allOf:
      properties:
        limit:
          description: max number of results to return. 0 or negative means no limit
          type: number
        offset:
          description: result to start at. A negative number means count backwards
            (e.g. -2 returns the 2 most recent results)
          type: number
      type: object
    searchResultsPost_request:
      allOf:
      - $ref: '#/components/schemas/SearchJob'
      - $ref: '#/components/schemas/searchResultsPost_request_allOf'
      required:
      - id
    searchDeletePost_request:
      properties:
        id:
          description: ID of the search job
          type: number
      required:
      - id
      type: object
    searchInstallPluginPost_request:
      properties:
        sources:
          description: Url or file path of the plugin to install (e.g. "https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/legittorrents.py").
            Supports multiple sources separated by `|`
          items:
            type: string
          type: array
      required:
      - sources
      type: object
    searchUninstallPluginPost_request:
      properties:
        names:
          description: Name of the plugin to uninstall (e.g. "legittorrents"). Supports
            multiple names separated by `|`
          items:
            type: string
          type: array
      required:
      - names
      type: object
    searchEnablePluginPost_request:
      properties:
        names:
          description: Name of the plugin to enable/disable (e.g. "legittorrents").
            Supports multiple names separated by `|`
          items:
            type: string
          type: array
        enable:
          description: Whether the plugins should be enabled
          type: boolean
      required:
      - enable
      - names
      type: object
    Preferences_scan_dirs_value:
      oneOf:
      - enum:
        - 0
        - 1
        type: integer
      - type: string
    SetPreferences_allOf:
      properties:
        web_ui_password:
          description: "For API ≥ v2.3.0: Plaintext WebUI password, not readable,\
            \ write-only. For API < v2.3.0: MD5 hash of WebUI password, hash is generated\
            \ from the following string: `username:Web UI Access:plain_text_web_ui_password`"
          format: password
          type: string
      type: object
      example: null
    AddTorrentsURLs_allOf:
      properties:
        urls:
          description: URLs separated with newlines
          type: string
      type: object
      example: null
    AddTorrentsFiles_allOf:
      properties:
        torrents:
          description: Raw data of torrent file. `torrents` can be presented multiple
            times.
          items:
            format: binary
            type: string
          type: array
      type: object
      example: null
    SetTorrentsLimit_allOf:
      properties:
        limit:
          format: int64
          type: integer
      type: object
      example: null
    TorrentsTags_allOf:
      properties:
        tags:
          items:
            type: string
          type: array
      type: object
      example: null
    SetTorrentsValue_allOf:
      properties:
        value:
          default: false
          description: "`value` is a boolean, affects the torrents listed in `hashes`,\
            \ default is `false`"
          type: boolean
      type: object
      example: null
    SearchJobStatus_allOf:
      properties:
        status:
          description: Current status of the search job (either `Running` or `Stopped`)
          enum:
          - Running
          - Stopped
          type: string
        total:
          description: Total number of results. If the status is `Running` this number
            may contineu to increase
          type: number
      type: object
      example: null
    SearchPlugin_supportedCategories_inner:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
  securitySchemes:
    sid:
      in: cookie
      name: SID
      type: apiKey
